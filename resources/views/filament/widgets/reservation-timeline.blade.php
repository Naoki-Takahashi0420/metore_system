<x-filament-widgets::widget>
    <!-- „Çπ„É≠„ÉÉ„Éà„ÇØ„É™„ÉÉ„ÇØ„Éè„É≥„Éâ„É©„ÉºÔºàÊúÄÂàù„Å´ÂÆöÁæ©Ôºâ -->
    <script>
        window.handleSlotClick = function(seatKey, timeSlot) {
            console.log('üéØ Slot clicked:', { seatKey, timeSlot });

            // „Éá„Éê„ÉÉ„Ç∞ÔºöLivewire„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
            console.log('Livewire available:', !!window.Livewire);
            console.log('Livewire.find available:', !!(window.Livewire && window.Livewire.find));

            try {
                // $wire„ÇíÁõ¥Êé•‰Ωø„ÅÜÔºàLivewire 3„ÅÆÊñ∞„Åó„ÅÑÊñπÊ≥ïÔºâ
                if (window.$wire) {
                    console.log('‚úÖ Using $wire directly');
                    window.$wire.call('openNewReservationFromSlot', seatKey, timeSlot);
                    return;
                }

                // Alpine.js„ÅÆ$wire„ÇíÊé¢„Åô
                const alpineElement = document.querySelector('[x-data]');
                if (alpineElement && alpineElement._x_dataStack) {
                    console.log('üîç Looking for Alpine $wire');
                    const alpineData = Alpine.$data(alpineElement);
                    if (alpineData.$wire) {
                        console.log('‚úÖ Found Alpine $wire');
                        alpineData.$wire.call('openNewReservationFromSlot', seatKey, timeSlot);
                        return;
                    }
                }

                // Livewire 3„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÂèñÂæó
                const wireElements = document.querySelectorAll('[wire\\:id]');
                console.log('üìä Found wire:id elements:', wireElements.length);

                for (const wireElement of wireElements) {
                    const wireId = wireElement.getAttribute('wire:id');
                    console.log('üìç Trying wire:id:', wireId);

                    if (window.Livewire && window.Livewire.find) {
                        const component = window.Livewire.find(wireId);
                        if (component) {
                            console.log('‚úÖ Found component, calling method');
                            component.call('openNewReservationFromSlot', seatKey, timeSlot);
                            return;
                        }
                    }
                }

                console.error('‚ùå Could not find a way to call Livewire method');

            } catch (error) {
                console.error('‚ùå Error in handleSlotClick:', error);
            }
        }

        // „Ç∞„É≠„Éº„Éê„É´„Å´Á¢∫ÂÆü„Å´ÁôªÈå≤
        if (typeof window.handleSlotClick === 'undefined') {
            console.log('‚ö†Ô∏è handleSlotClick was not defined, defining now');
        }
    </script>

    <x-filament::card>
        <!-- Tom Select CSS -->
        <link href="https://cdn.jsdelivr.net/npm/tom-select@2.3.1/dist/css/tom-select.css" rel="stylesheet">

        <style>
            .timeline-table {
                border-collapse: collapse;
                width: 100%;
                min-width: 1200px;
                position: relative;
            }

            .current-time-indicator {
                position: absolute;
                top: 60px;  /* „Éò„ÉÉ„ÉÄ„Éº„ÅÆÈ´ò„ÅïÂàÜ‰∏ã„Åí„Çã */
                bottom: 0;
                width: 2px;
                background: #ef4444;
                z-index: 100;
                pointer-events: none;
                box-shadow: 0 0 10px rgba(239, 68, 68, 0.8),
                            0 0 5px rgba(239, 68, 68, 0.6);
                animation: pulse 2s ease-in-out infinite;
            }

            @keyframes pulse {
                0%, 100% {
                    opacity: 1;
                }
                50% {
                    opacity: 0.7;
                }
            }

            /* Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„Åß„ÅÆÈùûË°®Á§∫ÔºàJavaScript„ÅßÂãïÁöÑÂà∂Âæ°Ôºâ */
            .current-time-indicator.outside-business-hours,
            #current-time-indicator.outside-business-hours {
                display: none !important;
                visibility: hidden !important;
                opacity: 0 !important;
            }

            .current-time-indicator::before {
                content: '';
                position: absolute;
                top: -8px;
                left: -7px;
                width: 0;
                height: 0;
                border-left: 9px solid transparent;
                border-right: 9px solid transparent;
                border-bottom: 12px solid #ef4444;
                filter: drop-shadow(0 -2px 2px rgba(239, 68, 68, 0.3));
            }

            .current-time-text {
                position: absolute;
                top: -30px;
                left: 50%;
                transform: translateX(-50%);
                color: #ef4444;
                font-size: 13px;
                font-weight: bold;
                background: white;
                padding: 3px 8px;
                border: 2px solid #ef4444;
                border-radius: 6px;
                white-space: nowrap;
                box-shadow: 0 2px 6px rgba(0,0,0,0.15);
                z-index: 101;
            }
            
            .timeline-table th,
            .timeline-table td {
                border-top: 1px solid #e0e0e0;
                border-bottom: 1px solid #e0e0e0;
                border-left: 1px solid #e0e0e0;
                padding: 0;
                height: 60px;
                position: relative;
            }
            
            .timeline-table th:last-child,
            .timeline-table td:last-child {
                border-right: 1px solid #e0e0e0;
            }
            
            .timeline-table th {
                background: #f8f8f8;
                font-weight: normal;
                font-size: 14px;
                text-align: center;
                min-width: 20px;
            }
            
            .timeline-table th[colspan] {
                min-width: 80px;
                border-right: 1px solid #e0e0e0;
            }
            
            .timeline-table td {
                width: 20px;
                min-width: 20px;
                cursor: pointer;
            }
            
            
            .timeline-table td:hover {
                background: #f5f5f5;
            }
            
            .seat-label {
                background: #f8f8f8;
                text-align: center;
                font-size: 14px;
                padding: 8px 12px;
                min-width: 120px;
                font-weight: 600;
                white-space: nowrap;
                position: sticky;
                left: 0;
                z-index: 10;
                border-right: 2px solid #d0d0d0 !important;
                box-shadow: 2px 0 4px rgba(0,0,0,0.05);
            }
            
            .sub-time-label {
                background: #e8f4f8;
                font-weight: bold;
            }

            /* „Çπ„Çø„ÉÉ„Éï„Éô„Éº„Çπ„É¢„Éº„ÉâÁî®„Çπ„Çø„Ç§„É´ */
            .staff-unassigned-label {
                background: linear-gradient(90deg, #fef3c7 0%, #fef3c7 95%, transparent 100%);
                border-left: 4px solid #f59e0b;
                font-weight: bold;
                color: #92400e;
            }

            .staff-assigned-label {
                background: linear-gradient(90deg, #d1fae5 0%, #d1fae5 95%, transparent 100%);
                border-left: 4px solid #10b981;
                font-weight: bold;
                color: #065f46;
            }

            .staff-no-shift {
                background: linear-gradient(90deg, #f3f4f6 0%, #f3f4f6 95%, transparent 100%);
                border-left: 4px solid #9ca3af;
                color: #6b7280;
                font-style: italic;
            }
            
            .booking-block {
                position: absolute;
                top: 2px;
                bottom: 2px;
                left: 2px;
                padding: 4px;
                border-radius: 4px;
                font-size: 12px;
                cursor: pointer;
                overflow: hidden;
                display: flex;
                flex-direction: column;
                justify-content: center;
                z-index: 10;
                transition: all 0.2s;
            }
            
            .booking-block:hover {
                transform: scale(1.02);
                box-shadow: 0 2px 8px rgba(0,0,0,0.15);
            }
            
            .booking-block.span-1 { width: calc(20px - 4px); }
            .booking-block.span-2 { width: calc(40px - 4px); }
            .booking-block.span-3 { width: calc(60px - 4px); }
            .booking-block.span-4 { width: calc(80px - 4px); }
            .booking-block.span-5 { width: calc(100px - 4px); }
            .booking-block.span-6 { width: calc(120px - 4px); }
            .booking-block.span-7 { width: calc(140px - 4px); }
            .booking-block.span-8 { width: calc(160px - 4px); }
            
            .booking-name {
                font-weight: bold;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
            
            .booking-menu {
                font-size: 11px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
            
            .course-care {
                background: #e3f2fd;
                border-left: 3px solid #2196f3;
            }
            
            .course-hydrogen {
                background: #f3e5f5;
                border-left: 3px solid #9c27b0;
            }
            
            .course-training {
                background: #fff3e0;
                border-left: 3px solid #ff9800;
            }
            
            .course-special {
                background: #e8f5e9;
                border-left: 3px solid #4caf50;
            }
            
            .course-premium {
                background: #ffebee;
                border-left: 3px solid #f44336;
            }
            
            .course-vip {
                background: #fffde7;
                border-left: 3px solid #ffc107;
            }
            
            .course-default {
                background: #f5f5f5;
                border-left: 3px solid #9e9e9e;
            }
            
            .break-block {
                background: #757575 !important;
                color: white;
                text-align: center;
                line-height: 56px;
                font-weight: bold;
            }
            
            .blocked-cell {
                background: #f5f5f5 !important;
                cursor: not-allowed !important;
            }
            
            .no-staff-cell {
                background: #ffecb3 !important;
                cursor: not-allowed !important;
                position: relative;
            }
            
            .no-staff-cell::after {
                content: '‚ùå';
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 12px;
                opacity: 0.7;
            }

            .past-time-cell {
                background: #e5e7eb !important;
                cursor: not-allowed !important;
                opacity: 0.6;
            }

            .past-time-cell:hover {
                background: #d1d5db !important;
            }
            
            .conflicting-reservation {
                border: 2px solid red !important;
                background: #ffe5e5 !important;
            }
            
            .time-cell {
                position: relative;
            }
            
            .time-cell::after {
                content: '';
                position: absolute;
                left: 50%;
                top: 0;
                bottom: 0;
                width: 1px;
                background: #f0f0f0;
            }

            /* „ÇØ„É™„ÉÉ„ÇØÂèØËÉΩ„Å™„Çπ„É≠„ÉÉ„Éà„ÅÆË¶ñË¶öÂäπÊûú */
            .clickable-slot {
                transition: all 0.2s ease;
                position: relative;
            }

            .clickable-slot:hover {
                box-shadow: inset 0 0 0 2px #2563eb;
                z-index: 10;
            }

            /* ‰∫àÁ¥Ñ‰∏çÂèØ„Çπ„É≠„ÉÉ„Éà„ÅÆË¶ñË¶öÂäπÊûú */
            .time-cell[style*="cursor: not-allowed"]:not(.blocked-cell):not(.past-time-cell):not(.no-staff-cell) {
                background: repeating-linear-gradient(
                    45deg,
                    transparent,
                    transparent 10px,
                    rgba(0,0,0,0.02) 10px,
                    rgba(0,0,0,0.02) 20px
                );
            }

            /* „Éõ„Éê„ÉºÊôÇ„ÅÆËøΩÂä†„Éú„Çø„É≥Ë°®Á§∫ */
            .clickable-slot::before {
                content: "+";
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 20px;
                color: #2563eb;
                opacity: 0;
                transition: opacity 0.2s ease;
                pointer-events: none;
                z-index: 5;
            }

            .clickable-slot:hover::before {
                opacity: 0.3;
            }
        </style>
        
        @php
            // „Çø„Ç§„É†„É©„Ç§„É≥„Éá„Éº„Çø„Åã„ÇâÂãïÁöÑ„Å´Âà§ÂÆö
            $useStaffAssignment = $timelineData['useStaffAssignment'] ?? false;
            $shiftBasedCapacity = $timelineData['shiftBasedCapacity'] ?? 1;
        @endphp

        <!-- Êìç‰ΩúË™¨Êòé -->
        <div class="bg-blue-50 border border-blue-200 rounded p-2 mb-4 text-sm">
            üí° <strong>Êìç‰ΩúÊñπÊ≥ï:</strong>
            @if($useStaffAssignment)
                „Çπ„Çø„ÉÉ„ÉïÂà•„É¢„Éº„Éâ - Á©∫„Åç„Çπ„É≠„ÉÉ„Éà„Çí„ÇØ„É™„ÉÉ„ÇØ„Åß‰∫àÁ¥Ñ‰ΩúÊàê„ÄÅ‰∫àÁ¥Ñ„Éñ„É≠„ÉÉ„ÇØ„ÇØ„É™„ÉÉ„ÇØ„ÅßË©≥Á¥∞Ë°®Á§∫
            @else
                ‰∫àÁ¥Ñ„Éñ„É≠„ÉÉ„ÇØ„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®Ë©≥Á¥∞ÁîªÈù¢„ÅåÈñã„Åç„ÄÅÈÄöÂ∏∏Â∏≠‚áî„Çµ„ÉñÊû†„ÅÆÁßªÂãï„Åå„Åß„Åç„Åæ„Åô
            @endif
        </div>
        
        <!-- Á´∂ÂêàË≠¶Âëä -->
        @if(!empty($timelineData['conflictingReservations']))
            <div class="bg-red-50 border border-red-300 rounded p-3 mb-4">
                <div class="flex items-start">
                    <div class="text-red-600 mr-2">‚ö†Ô∏è</div>
                    <div>
                        <p class="font-bold text-red-700 mb-2">‰∫àÁ¥Ñ„Éñ„É≠„ÉÉ„ÇØÊôÇÈñìÂ∏Ø„Å´‰∫àÁ¥Ñ„ÅåÂÖ•„Å£„Å¶„ÅÑ„Åæ„ÅôÔºÅ</p>
                        <ul class="text-sm text-red-600 space-y-1">
                            @foreach($timelineData['conflictingReservations'] as $conflict)
                                <li>‚Ä¢ {{ $conflict['customer_name'] }} - {{ $conflict['time'] }}</li>
                            @endforeach
                        </ul>
                        <p class="text-xs text-red-500 mt-2">„Åì„Çå„Çâ„ÅÆ‰∫àÁ¥Ñ„ÇíÂà•„ÅÆÊôÇÈñì„Å´ÁßªÂãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</p>
                    </div>
                </div>
            </div>
        @endif
        
        <!-- „Éò„ÉÉ„ÉÄ„Éº -->
        <div class="flex justify-between items-center mb-4">
            {{-- Â∫óËàóÈÅ∏ÊäûÔºàÊüîËªü„Å™Ë°®Á§∫ÊñπÂºèÔºâ --}}
            @php
                $storeCount = $stores->count();
                $currentStore = $stores->firstWhere('id', $selectedStore);
                $useStaffAssignment = $currentStore->use_staff_assignment ?? false;
                $shiftBasedCapacity = $currentStore->shift_based_capacity ?? 1;
            @endphp
            
            @if($storeCount <= 3)
                {{-- 3Â∫óËàó‰ª•‰∏ãÔºö„Éú„Çø„É≥ÂΩ¢Âºè --}}
                <div class="flex items-center gap-2">
                    <label class="text-sm font-medium">Â∫óËàóÔºö</label>
                    @foreach($stores as $store)
                        <button
                            wire:click="$set('selectedStore', {{ $store->id }})"
                            class="px-3 py-1 text-sm rounded-lg transition-colors {{ $selectedStore == $store->id ? 'bg-primary-600 text-white' : 'bg-gray-100 hover:bg-gray-200' }}"
                        >
                            {{ $store->name }}
                        </button>
                    @endforeach
                </div>
            @elseif($storeCount <= 8)
                {{-- 4-8Â∫óËàóÔºö„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥ --}}
                <div class="flex items-center gap-2">
                    <label class="text-sm font-medium">Â∫óËàóÔºö</label>
                    <x-filament::dropdown placement="bottom-start">
                        <x-slot name="trigger">
                            <button class="inline-flex items-center gap-2 px-3 py-1 bg-primary-600 text-white text-sm rounded-lg hover:bg-primary-700">
                                <x-heroicon-o-building-storefront class="w-4 h-4" />
                                <span>{{ $currentStore ? $currentStore->name : 'Â∫óËàó„ÇíÈÅ∏Êäû' }}</span>
                                <x-heroicon-m-chevron-down class="w-3 h-3" />
                            </button>
                        </x-slot>
                        
                        <div class="py-1">
                            @foreach($stores as $store)
                                @if($store->id != $selectedStore)
                                <button 
                                    wire:click="$set('selectedStore', {{ $store->id }})"
                                    class="w-full flex items-center gap-2 px-3 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                    @if($store->is_active)
                                        <x-heroicon-m-check-circle class="w-4 h-4 text-green-500" />
                                    @else
                                        <x-heroicon-m-x-circle class="w-4 h-4 text-gray-400" />
                                    @endif
                                    {{ $store->name }}
                                </button>
                                @endif
                            @endforeach
                        </div>
                    </x-filament::dropdown>
                </div>
            @else
                {{-- 9Â∫óËàó‰ª•‰∏äÔºöÊ§úÁ¥¢ÂèØËÉΩ„Å™ÈÅ∏Êäû --}}
                <div class="flex items-center gap-2">
                    <label class="text-sm font-medium">Â∫óËàóÔºö</label>
                    <select wire:model.live="selectedStore" class="border rounded px-3 py-1 text-sm">
                        @foreach($stores as $store)
                            <option value="{{ $store->id }}">{{ $store->name }}</option>
                        @endforeach
                    </select>
                </div>
            @endif
            
            {{-- ‰∫àÁ¥ÑÁÆ°ÁêÜ„É¢„Éº„ÉâË°®Á§∫ --}}
            <div class="flex items-center gap-2 px-3 py-1 rounded-lg text-sm {{ $useStaffAssignment ? 'bg-blue-50 text-blue-700' : 'bg-gray-50 text-gray-700' }}">
                @if($useStaffAssignment)
                    <x-heroicon-m-user-group class="w-4 h-4" />
                    <span>„Ç∑„Éï„Éà„Éô„Éº„ÇπÔºà„Çπ„Çø„ÉÉ„ÉïÂà•Ôºâ</span>
                    <span class="font-medium">ÔºàÊúÄÂ§ß{{ $shiftBasedCapacity }}Â∏≠Ôºâ</span>
                @else
                    <x-heroicon-m-clock class="w-4 h-4" />
                    <span>Âñ∂Ê•≠ÊôÇÈñì„Éô„Éº„Çπ</span>
                    <span class="font-medium">Ôºà{{ $currentStore->main_lines_count ?? 3 }}Â∏≠Ôºâ</span>
                @endif
            </div>
            
            <div class="flex items-center gap-4">
                <div class="flex items-center gap-2">
                    <button wire:click="changeDate('prev')" class="px-3 py-1 border rounded hover:bg-gray-100">
                        ‚óÄ
                    </button>
                    <div class="font-bold px-4">
                        {{ \Carbon\Carbon::parse($selectedDate)->format('YÂπ¥nÊúàjÊó•') }}
                        ({{ ['Êó•', 'Êúà', 'ÁÅ´', 'Ê∞¥', 'Êú®', 'Èáë', 'Âúü'][\Carbon\Carbon::parse($selectedDate)->dayOfWeek] }})
                    </div>
                    <button wire:click="changeDate('next')" class="px-3 py-1 border rounded hover:bg-gray-100">
                        ‚ñ∂
                    </button>
                </div>
            </div>
        </div>


        <!-- „Çø„Ç§„É†„É©„Ç§„É≥ -->
        <div class="overflow-x-auto" style="position: relative;">
            <!-- ÁèæÂú®ÊôÇÂàª„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº -->
            @php
                $isToday = \Carbon\Carbon::parse($selectedDate)->isToday();
            @endphp
            @if($isToday)
                @php
                    // ÊòéÁ§∫ÁöÑ„Å´Êó•Êú¨ÊôÇÈñì„ÇíÂèñÂæó
                    $now = \Carbon\Carbon::now('Asia/Tokyo');
                    $currentHour = $now->hour;
                    $currentMinute = $now->minute;
                    $shouldShowIndicator = false;

                    // „Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†±„ÇíJavaScript„Ç≥„É≥„ÇΩ„Éº„É´„Å´Âá∫Âäõ
                    echo "<script>console.log('üêò PHP: JSTÁèæÂú®ÊôÇÂàª: {$currentHour}:{$currentMinute} - Âñ∂Ê•≠ÊôÇÈñìÂÜÖÔºü" . ($currentHour >= 9 && $currentHour < 22 ? 'YES' : 'NO') . "');</script>";
                    echo "<script>console.log('üêò PHP Debug: shouldShow={$shouldShowIndicator}, isToday=" . ($isToday ? 'true' : 'false') . "');</script>";

                    // Âñ∂Ê•≠ÊôÇÈñìÂÜÖ„ÅÆÂ†¥Âêà„ÅÆ„Åø‰ΩçÁΩÆË®àÁÆóÔºà9:00 - 22:00Ôºâ„ÉÜ„Çπ„ÉàÁî®„Å´9ÊôÇ„Åã„Çâ
                    $leftPosition = 0;
                    if ($currentHour >= 9 && $currentHour < 22) { // 22:00‰ª•Èôç„ÅØË°®Á§∫„Åó„Å™„ÅÑ
                        $shouldShowIndicator = true;
                        $minutesFromStart = ($currentHour - 9) * 60 + $currentMinute;
                        $cellIndex = floor($minutesFromStart / 30);
                        $percentageIntoCell = ($minutesFromStart % 30) / 30;
                        $firstCellWidth = 36; // Â∏≠„É©„Éô„É´„ÅÆÂπÖ
                        $cellWidth = 48; // ÂêÑ„Çª„É´„ÅÆÂπÖ
                        $leftPosition = $firstCellWidth + ($cellIndex * $cellWidth) + ($percentageIntoCell * $cellWidth);
                    }
                @endphp
                @php
                    // Âñ∂Ê•≠ÊôÇÈñì„Å´Èñ¢‰øÇ„Å™„Åè‰ΩçÁΩÆË®àÁÆó„ÇíË°å„ÅÜÔºàJS„ÅßÂà∂Âæ°Ôºâ
                    if (!$shouldShowIndicator) {
                        $minutesFromStart = ($currentHour - 9) * 60 + $currentMinute;
                        $cellIndex = floor($minutesFromStart / 30);
                        $percentageIntoCell = ($minutesFromStart % 30) / 30;
                        $firstCellWidth = 36;
                        $cellWidth = 48;
                        $leftPosition = $firstCellWidth + ($cellIndex * $cellWidth) + ($percentageIntoCell * $cellWidth);
                    }
                @endphp
                <div id="current-time-indicator" class="current-time-indicator{{ ($currentHour < 9 || $currentHour >= 22) ? ' outside-business-hours' : '' }}" style="left: {{ $leftPosition }}px;">
                    <span class="current-time-text">{{ $now->format('H:i') }}</span>
                </div>
            @endif

            @if(!empty($timelineData))
                <table class="timeline-table">
                    <thead>
                        <tr>
                            <th style="vertical-align: middle;">{{ $useStaffAssignment ? '„Çπ„Çø„ÉÉ„Éï/„É©„Ç§„É≥' : 'Â∏≠Êï∞' }}</th>
                            @php
                                $hourGroups = [];
                                foreach($timelineData['slots'] as $index => $slot) {
                                    $hour = substr($slot, 0, 2);
                                    if (!isset($hourGroups[$hour])) {
                                        $hourGroups[$hour] = 0;
                                    }
                                    $hourGroups[$hour]++;
                                }
                            @endphp
                            @foreach($hourGroups as $hour => $count)
                                <th colspan="{{ $count }}" style="font-weight: bold;">{{ $hour }}:00</th>
                            @endforeach
                        </tr>
                    </thead>
                    <tbody>
                        @php
                            // „Ç∑„Éï„Éà„Éô„Éº„Çπ„É¢„Éº„Éâ„ÅÆÂ†¥Âêà„ÅØ„ÇΩ„Éº„ÉàÈ†Ü„ÇíÂ§âÊõ¥
                            $sortedTimeline = $timelineData['timeline'];
                            if ($useStaffAssignment) {
                                $sortedTimeline = collect($timelineData['timeline'])->sortBy(function($seat, $key) {
                                    // Êú™ÊåáÂÆö„ÇíÊúÄÂàù„Å´„ÄÅ„Åù„ÅÆÂæå„Çπ„Çø„ÉÉ„Éï„Çí„Ç¢„É´„Éï„Ç°„Éô„ÉÉ„ÉàÈ†Ü
                                    if ($seat['type'] === 'unassigned') return '0';
                                    if ($seat['type'] === 'staff') return '1_' . $seat['label'];
                                    return '2_' . $key;
                                })->toArray();
                            }
                        @endphp
                        @foreach($sortedTimeline as $key => $seat)
                            <tr>
                                <td class="seat-label {{ $seat['type'] === 'sub' ? 'sub-time-label' : '' }} {{ $seat['type'] === 'unassigned' ? 'bg-yellow-50 border-yellow-200' : '' }} {{ $seat['type'] === 'staff' ? (($seat['has_shift'] ?? false) ? 'bg-green-50 border-green-200' : 'bg-gray-100 border-gray-300') : '' }}">
                                    @if($seat['type'] === 'unassigned')
                                        <span class="text-yellow-700 font-medium">{{ $seat['label'] }}</span>
                                    @elseif($seat['type'] === 'staff')
                                        @if($seat['has_shift'] ?? false)
                                            <span class="text-green-700 font-medium">üë§ {{ $seat['label'] }}</span>
                                        @else
                                            <span class="text-gray-500">üë§ {{ $seat['label'] }}<br><small class="text-xs">„Ç∑„Éï„Éà„Å™„Åó</small></span>
                                        @endif
                                    @else
                                        {{ $seat['label'] }}
                                    @endif
                                </td>
                                @foreach($timelineData['slots'] as $index => $slot)
                                    @php
                                        $hasReservation = false;
                                        foreach($seat['reservations'] as $reservation) {
                                            if($reservation['start_slot'] <= $index && $index < $reservation['start_slot'] + $reservation['span']) {
                                                $hasReservation = true;
                                                break;
                                            }
                                        }
                                        $isBlocked = in_array($index, $timelineData['blockedSlots']);

                                        // ‰∫àÁ¥ÑÂèØÂê¶„ÅÆË©≥Á¥∞ÊÉÖÂ†±„ÇíÂèñÂæó
                                        $availabilityResult = null;
                                        $tooltipMessage = '';
                                        if (!$hasReservation && !$isBlocked && isset($currentStore)) {
                                            $endTime = \Carbon\Carbon::parse($slot)->addMinutes($currentStore->reservation_slot_duration ?? 30)->format('H:i');
                                            $availabilityResult = $this->canReserveAtTimeSlot($slot, $endTime, $currentStore, \Carbon\Carbon::parse($selectedDate));

                                            if (!$availabilityResult['can_reserve']) {
                                                $tooltipMessage = $availabilityResult['reason'] ?: '‰∫àÁ¥Ñ‰∏çÂèØ';
                                            } else {
                                                $tooltipMessage = "‰∫àÁ¥ÑÂèØËÉΩÔºàÁ©∫„Åç: {$availabilityResult['available_slots']}/{$availabilityResult['total_capacity']}Â∏≠Ôºâ";
                                            }
                                        }

                                        // „Ç∑„Éï„Éà„Éô„Éº„Çπ„É¢„Éº„Éâ„Åß„Çπ„Çø„ÉÉ„Éï‰∏çÂú®„ÉÅ„Çß„ÉÉ„ÇØ
                                        $hasNoStaff = false;
                                        if (isset($timelineData['useStaffAssignment']) && $timelineData['useStaffAssignment']) {
                                            // „Çπ„Çø„ÉÉ„Éï„É©„Ç§„É≥„ÅÆÂ†¥Âêà
                                            if ($seat['type'] === 'staff') {
                                                if (!isset($seat['has_shift']) || !$seat['has_shift']) {
                                                    // „Ç∑„Éï„Éà„Åå„Å™„ÅÑ„Çπ„Çø„ÉÉ„Éï„ÅØÂÖ®ÊôÇÈñìÂ∏Ø‰∏çÂèØ
                                                    $hasNoStaff = true;
                                                } elseif (isset($seat['shift'])) {
                                                    $shift = $seat['shift'];
                                                    $slotTime = \Carbon\Carbon::parse($selectedDate . ' ' . $slot);
                                                    $shiftStart = \Carbon\Carbon::parse($shift->start_time);
                                                    $shiftEnd = \Carbon\Carbon::parse($shift->end_time);

                                                    // „Ç∑„Éï„ÉàÊôÇÈñìÂ§ñ„ÅØ‰∏çÂèØ
                                                    if (!$slotTime->between($shiftStart, $shiftEnd)) {
                                                        $hasNoStaff = true;
                                                    }
                                                }
                                            }
                                            // Êú™ÊåáÂÆö„É©„Ç§„É≥„ÅÆÂ†¥Âêà„ÄÅavailabilityResult„ÅßÂà§ÂÆöÔºà„Çπ„Çø„ÉÉ„Éï„Åå„ÅÑ„Å™„ÅÑÊôÇÈñì„ÅØ‰∏çÂèØÔºâ
                                            elseif ($seat['type'] === 'unassigned' && $availabilityResult && !$availabilityResult['can_reserve']) {
                                                // canReserveAtTimeSlot„Ååfalse„Å™„Çâ„ÄÅ„Çπ„Çø„ÉÉ„Éï‰∏çÂú®„Å®„Åó„Å¶Êâ±„ÅÜ
                                                if (strpos($availabilityResult['reason'] ?? '', '„Çπ„Çø„ÉÉ„Éï') !== false) {
                                                    $hasNoStaff = true;
                                                }
                                            }
                                            // „Çµ„Éñ„É©„Ç§„É≥„ÅØÁã¨Á´ã„Åó„Å¶Âà©Áî®ÂèØËÉΩ
                                        }
                                        
                                        // ÈÅéÂéª„ÅÆÊôÇÈñìÂ∏Ø„Åã„ÉÅ„Çß„ÉÉ„ÇØÔºàÁèæÂú®ÊôÇÂàª„Åã„Çâ1ÊôÇÈñìÂâç„Åæ„ÅßË®±ÂèØÔºâ
                                        $slotDateTime = \Carbon\Carbon::parse($selectedDate . ' ' . $slot);
                                        $minimumTime = \Carbon\Carbon::now()->subHours(1);
                                        $isPast = $slotDateTime->lt($minimumTime);

                                        // Áµ±ÂêàÁöÑ„Å™‰∫àÁ¥ÑÂèØËÉΩÊÄßÂà§ÂÆö„Çí‰ΩøÁî®ÔºàÂÆπÈáèÂà∂Èôê„ÇÇËÄÉÊÖÆÔºâ
                                        $isClickable = false;

                                        if (!$hasReservation && !$isBlocked && !$isPast) {
                                            // „Çπ„Çø„ÉÉ„Éï„Ç∑„Éï„Éà„É¢„Éº„Éâ„Åß„ÅØ„ÄÅavailabilityResult„ÅÆÂà§ÂÆö„ÇíÂÑ™ÂÖà
                                            if (isset($timelineData['useStaffAssignment']) && $timelineData['useStaffAssignment']) {
                                                if ($availabilityResult) {
                                                    $isClickable = $availabilityResult['can_reserve'] ?? false;
                                                    // „Çπ„Çø„ÉÉ„Éï‰∏çÂú®„ÅÆÂ†¥Âêà„ÅØ„ÄÅ„Å©„ÅÆ„É©„Ç§„É≥„ÇÇ„ÇØ„É™„ÉÉ„ÇØ‰∏çÂèØ
                                                    if (!$isClickable && strpos($availabilityResult['reason'] ?? '', '„Çπ„Çø„ÉÉ„Éï') !== false) {
                                                        $hasNoStaff = true;
                                                    }
                                                }
                                            } else {
                                                // Âñ∂Ê•≠ÊôÇÈñì„Éô„Éº„Çπ„É¢„Éº„Éâ„ÅÆÂà§ÂÆö
                                                try {
                                                    if ($availabilityResult) {
                                                        $isClickable = $availabilityResult['can_reserve'] ?? false;
                                                    }
                                                } catch (\Exception $e) {
                                                    // „Ç®„É©„Éº„ÅÆÂ†¥Âêà„ÅØÂæìÊù•„ÅÆÂÄãÂà•Âà§ÂÆö„Å´„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ
                                                    $isWithinBusinessHours = true;
                                                    $store = $currentStore;
                                                    if ($store) {
                                                        $dayOfWeek = $slotDateTime->format('l');
                                                        $closingTime = '20:00'; // „Éá„Éï„Ç©„É´„Éà

                                                        if (isset($store->business_hours[$dayOfWeek])) {
                                                            $closingTime = $store->business_hours[$dayOfWeek]['close'] ?? '20:00';
                                                        } elseif (isset($store->business_hours['close'])) {
                                                            $closingTime = $store->business_hours['close'];
                                                        }

                                                        $closingDateTime = \Carbon\Carbon::parse($selectedDate . ' ' . $closingTime);
                                                        $minEndTime = $slotDateTime->copy()->addMinutes(60);
                                                        $isWithinBusinessHours = $minEndTime->lte($closingDateTime);
                                                    }
                                                    $isClickable = !$hasNoStaff && $isWithinBusinessHours;
                                                }
                                            }
                                        }
                                        $isPastClickable = !$hasReservation && !$isBlocked && $isPast && !$hasNoStaff;
                                    @endphp
                                    <td class="time-cell {{ $isBlocked ? 'blocked-cell' : '' }} {{ $hasNoStaff ? 'no-staff-cell' : '' }} {{ $isPast ? 'past-time-cell' : '' }} {{ $isClickable ? 'empty-slot clickable-slot' : ($isPastClickable ? 'past-clickable' : '') }}"
                                        @if($isClickable)
                                            wire:click="openNewReservationFromSlot('{{ $key }}', '{{ $slot }}')"
                                            style="cursor: pointer; position: relative;"
                                            onmouseover="this.style.backgroundColor='{{ $seat['type'] === 'unassigned' ? '#fef3c7' : ($seat['type'] === 'staff' ? '#d1fae5' : '#e3f2fd') }}'"
                                            onmouseout="this.style.backgroundColor=''"
                                            title="{{ $tooltipMessage ?: '„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶‰∫àÁ¥Ñ„Çí‰ΩúÊàê' }}{{ $seat['type'] === 'staff' ? ' (' . $seat['label'] . ')' : '' }}"
                                        @elseif($isPastClickable)
                                            onclick="alert('ÈÅéÂéª„ÅÆÊôÇÈñìÂ∏Ø„Åß„Åô„ÄÇ\n‰∫àÁ¥Ñ„ÅØÈñãÂßãÊôÇÂàª„ÅÆ1ÊôÇÈñìÂâç„Åæ„ÅßÂèó„Åë‰ªò„Åë„Å¶„ÅÑ„Åæ„Åô„ÄÇ')"
                                            style="cursor: not-allowed; position: relative;"
                                            title="ÈÅéÂéª„ÅÆÊôÇÈñìÂ∏Ø„Åß„ÅôÔºà‰∫àÁ¥ÑÈñãÂßã1ÊôÇÈñìÂâç„Åæ„ÅßÂèó‰ªòÔºâ"
                                        @elseif(!$hasReservation && !$isBlocked)
                                            style="cursor: not-allowed; position: relative; opacity: 0.6;"
                                            title="{{ $tooltipMessage ?: ($hasNoStaff ? '„Çπ„Çø„ÉÉ„Éï„ÅÆ„Ç∑„Éï„Éà„Åå„ÅÇ„Çä„Åæ„Åõ„Çì' : '‰∫àÁ¥Ñ‰∏çÂèØ') }}"
                                        @endif>
                                        @if($isBlocked)
                                            <div style="background: #9e9e9e; color: white; height: 100%; display: flex; align-items: center; justify-content: center; font-weight: bold; font-size: 14px;">
                                                BRK
                                            </div>
                                        @else
                                            @foreach($seat['reservations'] as $reservation)
                                                @if($reservation['start_slot'] == $index)
                                                    <div class="booking-block 
                                                        course-{{ $reservation['course_type'] }}
                                                        span-{{ ceil($reservation['span']) }}
                                                        {{ $reservation['is_conflicting'] ?? false ? 'conflicting-reservation' : '' }}"
                                                        wire:click="openReservationDetail({{ $reservation['id'] }})">
                                                        <div class="booking-name">
                                                            @if($reservation['is_new_customer'] ?? false)
                                                                <span style="background: #ff6b6b; color: white; padding: 1px 4px; border-radius: 3px; font-size: 10px; margin-right: 3px;">NEW</span>
                                                            @endif
                                                            {{ $reservation['customer_name'] }}
                                                        </div>
                                                        <div class="booking-menu">{{ $reservation['menu_name'] }}</div>
                                                        @if($reservation['staff_name'])
                                                            <div style="font-size: 10px; color: #666; margin-top: 2px;">
                                                                üë§ {{ $reservation['staff_name'] }}
                                                            </div>
                                                        @endif
                                                        @if($reservation['is_conflicting'] ?? false)
                                                            <div style="color: red; font-size: 10px; font-weight: bold;">‚ö†Ô∏è Á´∂Âêà</div>
                                                        @endif
                                                    </div>
                                                @endif
                                            @endforeach
                                        @endif
                                    </td>
                                @endforeach
                            </tr>
                        @endforeach
                    </tbody>
                </table>
            @else
                <div class="text-center py-8 text-gray-500">
                    „Éá„Éº„Çø„Åå„ÅÇ„Çä„Åæ„Åõ„Çì
                </div>
            @endif
        </div>
        
        <!-- Âá°‰æãÔºàÂ∫óËàó„Éï„Ç£„É´„Çø„ÉºÈÅ©Áî®Ôºâ -->
        <div class="flex flex-wrap gap-4 mt-4 text-sm">
            @if(!empty($categories))
                @foreach($categories as $category)
                    <div class="flex items-center gap-2">
                        <div class="w-5 h-5 rounded course-{{ $category['color_class'] }} border"></div>
                        <span>{{ $category['name'] }}</span>
                    </div>
                @endforeach
            @endif
        </div>

        <!-- JavaScript for Current Time Indicator -->
        <script>
            console.log('„Çø„Ç§„É†„É©„Ç§„É≥„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº„Çπ„ÇØ„É™„Éó„ÉàË™≠„ÅøËæº„ÅøÈñãÂßã');

            // üö® EMERGENCY: Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅÆÂº∑Âà∂ÂâäÈô§ÔºàÂÆåÂÖ®ÁâàÔºâ
            function emergencyRemoveIndicator() {
                const now = new Date().toLocaleString("en-US", {timeZone: "Asia/Tokyo"});
                const jstDate = new Date(now);
                const currentHour = jstDate.getHours();

                console.log('üö® EMERGENCY CHECK: JSTÊôÇÂàª=' + currentHour + 'ÊôÇ');

                if (currentHour < 10 || currentHour >= 22) {
                    console.log('üö® EMERGENCY: Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅßÂº∑Âà∂ÂâäÈô§ÂÆüË°å');
                    // „Çà„ÇäÂåÖÊã¨ÁöÑ„Å™ÂâäÈô§
                    const selectors = [
                        '#current-time-indicator',
                        '.current-time-indicator',
                        '[class*="current-time"]',
                        '[style*="background: #ef4444"]',
                        '[style*="background:#ef4444"]',
                        'div[style*="position: absolute"][style*="width: 2px"]'
                    ];

                    selectors.forEach(selector => {
                        const elements = document.querySelectorAll(selector);
                        elements.forEach(el => {
                            console.log('üö® Ë¶ÅÁ¥†ÂâäÈô§:', selector, el);
                            el.remove();
                        });
                    });
                } else {
                    console.log('‚úÖ EMERGENCY CHECK: Âñ∂Ê•≠ÊôÇÈñìÂÜÖ„ÅÆ„Åü„ÇÅÂâäÈô§„Åó„Å™„ÅÑ');
                }
            }

            // Âç≥Â∫ß„Å´ÂÆüË°å
            emergencyRemoveIndicator();

            // ÂÆöÊúüÂÆüË°å
            setInterval(emergencyRemoveIndicator, 5000);

            function createTimeIndicator() {
                console.log('createTimeIndicator ÂÆüË°åÈñãÂßã');

                // Êó•Êú¨ÊôÇÈñì„ÅßÁèæÂú®ÊôÇÂàª„ÇíÂèñÂæó
                const now = new Date().toLocaleString("en-US", {timeZone: "Asia/Tokyo"});
                const jstDate = new Date(now);
                const currentHour = jstDate.getHours();
                const currentMinute = jstDate.getMinutes();

                // üö® Á∑äÊÄ•ÂÅúÊ≠¢: Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅØ‰Ωï„ÇÇ„Åó„Å™„ÅÑ
                if (currentHour < 10 || currentHour >= 22) {
                    console.log('üö´ createTimeIndicator: Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅÆ„Åü„ÇÅÂá¶ÁêÜÂÅúÊ≠¢');
                    return;
                }

                console.log(`üïí JSTÁèæÂú®ÊôÇÂàª: ${currentHour}:${String(currentMinute).padStart(2, '0')}`);
                console.log(`üïí „É≠„Éº„Ç´„É´ÊôÇÂàªÔºàÂèÇËÄÉÔºâ: ${new Date().getHours()}:${String(new Date().getMinutes()).padStart(2, '0')}`);
                console.log(`üìã Âñ∂Ê•≠ÊôÇÈñìÂà§ÂÆö: 10ÊôÇ‰ª•ÂâçÔºü${currentHour < 10} / 22ÊôÇ‰ª•ÈôçÔºü${currentHour >= 22}`);

                // Âñ∂Ê•≠ÊôÇÈñì„ÉÅ„Çß„ÉÉ„ÇØÔºà22:00‰ª•Èôç„ÅØË°®Á§∫„Åó„Å™„ÅÑÔºâ
                if (currentHour < 10 || currentHour >= 22) {
                    console.log('üö´ Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅÆ„Åü„ÇÅ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„ÉºÂâäÈô§');
                    // Êó¢Â≠ò„ÅÆ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº„ÇíÂâäÈô§
                    const existing = document.getElementById('current-time-indicator');
                    if (existing) {
                        console.log('üóëÔ∏è Êó¢Â≠ò„Ç§„É≥„Ç∏„Ç±„Éº„Çø„ÉºÂâäÈô§ÂÆüË°å');
                        existing.remove();
                    } else {
                        console.log('‚ÑπÔ∏è ÂâäÈô§ÂØæË±°„ÅÆ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑ');
                    }
                    return;
                }

                console.log('‚úÖ Âñ∂Ê•≠ÊôÇÈñìÂÜÖ„ÅÆ„Åü„ÇÅ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„ÉºË°®Á§∫Âá¶ÁêÜ„ÇíÁ∂öË°å');

                // Ë¶ÅÁ¥†„ÇíÊé¢„Åô
                const table = document.querySelector('.timeline-table');
                const container = document.querySelector('.overflow-x-auto');

                if (!table || !container) {
                    console.log('ÂøÖË¶Å„Å™Ë¶ÅÁ¥†„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì', { table, container });
                    return;
                }

                // Êó¢Â≠ò„ÅÆ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº„ÇíÂâäÈô§
                const existing = document.getElementById('current-time-indicator');
                if (existing) {
                    existing.remove();
                }

                // „Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº‰ΩúÊàê
                const indicator = document.createElement('div');
                indicator.id = 'current-time-indicator';
                indicator.style.cssText = `
                    position: absolute;
                    left: 0px;
                    top: 60px;
                    width: 2px;
                    height: calc(100% - 60px);
                    background: #ef4444;
                    z-index: 1000;
                    pointer-events: none;
                    box-shadow: 0 0 10px rgba(239, 68, 68, 0.8);
                `;

                container.style.position = 'relative';
                container.appendChild(indicator);

                // ‰ΩçÁΩÆË®àÁÆó„Å®Êõ¥Êñ∞„ÇíÈÅÖÂª∂ÂÆüË°å
                setTimeout(() => {
                    const firstRow = table.querySelector('tbody tr');
                    if (!firstRow) {
                        console.log('„Éá„Éº„ÇøË°å„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
                        return;
                    }

                    const cells = firstRow.querySelectorAll('td');
                    if (cells.length < 2) {
                        console.log('ÂçÅÂàÜ„Å™„Çª„É´„Åå„ÅÇ„Çä„Åæ„Åõ„Çì');
                        return;
                    }

                    const firstCellWidth = cells[0].offsetWidth;
                    const cellWidth = cells[1].offsetWidth;

                    console.log(`ÂÆüÊ∏¨ÂÄ§: Â∏≠ÂπÖ=${firstCellWidth}px, „Çª„É´ÂπÖ=${cellWidth}px`);

                    if (firstCellWidth === 0 || cellWidth === 0) {
                        console.log('„Çª„É´ÂπÖ„Åå0„ÄÅÂÜçË©¶Ë°å„Åó„Åæ„Åô');
                        // „Åï„Çâ„Å´ÈÅÖÂª∂„Åó„Å¶ÂÜçË©¶Ë°å
                        setTimeout(() => {
                            const retryFirstCellWidth = cells[0].offsetWidth || 36;
                            const retryCellWidth = cells[1].offsetWidth || 48;

                            const minutesFromStart = (currentHour - 10) * 60 + currentMinute;
                            const cellIndex = Math.floor(minutesFromStart / 30);
                            const percentageIntoCell = (minutesFromStart % 30) / 30;
                            const leftPosition = retryFirstCellWidth + (cellIndex * retryCellWidth) + (percentageIntoCell * retryCellWidth);

                            indicator.style.left = leftPosition + 'px';
                            console.log(`ÂÜçË©¶Ë°åÁµêÊûú: Â∑¶‰ΩçÁΩÆ=${leftPosition}px`);
                        }, 500);
                        return;
                    }

                    // ÊôÇÈñìË®àÁÆó
                    const minutesFromStart = (currentHour - 10) * 60 + currentMinute;
                    const cellIndex = Math.floor(minutesFromStart / 30);
                    const percentageIntoCell = (minutesFromStart % 30) / 30;
                    const leftPosition = firstCellWidth + (cellIndex * cellWidth) + (percentageIntoCell * cellWidth);

                    console.log(`Ë®àÁÆóÁµêÊûú: Â∑¶‰ΩçÁΩÆ=${leftPosition}px, „Çª„É´„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ=${cellIndex}`);

                    indicator.style.left = leftPosition + 'px';

                    // ÊôÇÂàª„ÉÜ„Ç≠„Çπ„Éà„ÇÇÊõ¥Êñ∞
                    const timeText = indicator.querySelector('.current-time-text');
                    if (timeText) {
                        timeText.textContent = `${currentHour.toString().padStart(2, '0')}:${currentMinute.toString().padStart(2, '0')}`;
                    }

                    console.log('„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº‰ΩçÁΩÆÊõ¥Êñ∞ÂÆå‰∫Ü');
                }, 200);

                console.log('„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº‰ΩúÊàêÂÆå‰∫Ü');
            }

            // „É™„Ç¢„É´„Çø„Ç§„É†Êõ¥Êñ∞Áî®„ÅÆÈñ¢Êï∞
            function updateTimeIndicator() {
                // Êó•Êú¨ÊôÇÈñì„ÅßÁèæÂú®ÊôÇÂàª„ÇíÂèñÂæó
                const now = new Date().toLocaleString("en-US", {timeZone: "Asia/Tokyo"});
                const jstDate = new Date(now);
                const currentHour = jstDate.getHours();
                const currentMinute = jstDate.getMinutes();

                console.log(`üîÑ updateTimeIndicator: JSTÁèæÂú®ÊôÇÂàª: ${currentHour}:${String(currentMinute).padStart(2, '0')}`);
                console.log(`üîÑ updateTimeIndicator: Âñ∂Ê•≠ÊôÇÈñìÂà§ÂÆö: 10ÊôÇ‰ª•ÂâçÔºü${currentHour < 10} / 22ÊôÇ‰ª•ÈôçÔºü${currentHour >= 22}`);

                // Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅÆÂ†¥Âêà„ÅØ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº„ÇíÂâäÈô§
                if (currentHour < 10 || currentHour >= 22) {
                    console.log('üîÑ üö´ updateTimeIndicator: Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅÆ„Åü„ÇÅ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„ÉºÂâäÈô§');
                    const existing = document.getElementById('current-time-indicator');
                    if (existing) {
                        console.log('üîÑ üóëÔ∏è updateTimeIndicator: Êó¢Â≠ò„Ç§„É≥„Ç∏„Ç±„Éº„Çø„ÉºÂâäÈô§ÂÆüË°å');
                        existing.remove();
                    }
                    return;
                }

                // Êó¢Â≠ò„ÅÆ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ‰ΩçÁΩÆ„Å®ÊôÇÂàª„ÇíÊõ¥Êñ∞
                const indicator = document.getElementById('current-time-indicator');
                if (indicator) {
                    const table = document.querySelector('.timeline-table');
                    if (table) {
                        const firstRow = table.querySelector('tbody tr');
                        if (firstRow) {
                            const cells = firstRow.querySelectorAll('td');
                            if (cells.length >= 2) {
                                const firstCellWidth = cells[0].offsetWidth || 36;
                                const cellWidth = cells[1].offsetWidth || 48;

                                const minutesFromStart = (currentHour - 10) * 60 + currentMinute;
                                const cellIndex = Math.floor(minutesFromStart / 30);
                                const percentageIntoCell = (minutesFromStart % 30) / 30;
                                const leftPosition = firstCellWidth + (cellIndex * cellWidth) + (percentageIntoCell * cellWidth);

                                indicator.style.left = leftPosition + 'px';

                                const timeText = indicator.querySelector('.current-time-text');
                                if (timeText) {
                                    timeText.textContent = `${currentHour.toString().padStart(2, '0')}:${currentMinute.toString().padStart(2, '0')}`;
                                }
                            }
                        }
                    }
                } else {
                    // „Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ‰ΩúÊàê
                    createTimeIndicator();
                }
            }

            // ÂÆüË°å
            document.addEventListener('DOMContentLoaded', function() {
                console.log('DOMContentLoaded - Âñ∂Ê•≠ÊôÇÈñì„ÉÅ„Çß„ÉÉ„ÇØÂæå„Å´„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº‰ΩúÊàêÈñãÂßã');

                // Âñ∂Ê•≠ÊôÇÈñì„ÉÅ„Çß„ÉÉ„ÇØ
                const now = new Date().toLocaleString("en-US", {timeZone: "Asia/Tokyo"});
                const jstDate = new Date(now);
                const currentHour = jstDate.getHours();

                console.log('üïí DOMContentLoaded: JSTÁèæÂú®ÊôÇÂàª=' + currentHour + 'ÊôÇ');

                // Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„Åß„ÇÇPHPÂÅ¥„Åß‰ΩúÊàê„Åï„Çå„Å¶„ÅÑ„Çå„Å∞JavaScript„ÅßÂà∂Âæ°
                const indicator = document.getElementById('current-time-indicator');
                if (indicator) {
                    if (currentHour < 9 || currentHour >= 22) {
                        console.log('‚ùå Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅÆ„Åü„ÇÅËµ§Á∑ö„ÇíÈùûË°®Á§∫');
                        indicator.classList.add('outside-business-hours');
                        return;
                    } else {
                        console.log('‚úÖ Âñ∂Ê•≠ÊôÇÈñìÂÜÖ„ÅÆ„Åü„ÇÅËµ§Á∑ö„ÇíË°®Á§∫');
                        indicator.classList.remove('outside-business-hours');
                    }
                }

                console.log('‚úÖ DOMContentLoaded: Âñ∂Ê•≠ÊôÇÈñìÂÜÖ„ÅÆ„Åü„ÇÅ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº‰ΩúÊàê');
                setTimeout(createTimeIndicator, 1000);

                // 1ÂàÜ„Åî„Å®„Å´„É™„Ç¢„É´„Çø„Ç§„É†Êõ¥Êñ∞
                setInterval(updateTimeIndicator, 60000);
            });

            // Âç≥Â∫ß„Å´„ÇÇÂÆüË°åÔºàÂñ∂Ê•≠ÊôÇÈñì„ÉÅ„Çß„ÉÉ„ÇØ‰ªò„ÅçÔºâ
            setTimeout(function() {
                console.log('Âç≥Â∫ßÂÆüË°å - Âñ∂Ê•≠ÊôÇÈñì„ÉÅ„Çß„ÉÉ„ÇØÂæå„Å´„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº‰ΩúÊàê');

                // Âñ∂Ê•≠ÊôÇÈñì„ÉÅ„Çß„ÉÉ„ÇØ
                const now = new Date().toLocaleString("en-US", {timeZone: "Asia/Tokyo"});
                const jstDate = new Date(now);
                const currentHour = jstDate.getHours();

                console.log('üïí Âç≥Â∫ßÂÆüË°å: JSTÁèæÂú®ÊôÇÂàª=' + currentHour + 'ÊôÇ');

                if (currentHour < 10 || currentHour >= 22) {
                    console.log('üö´ Âç≥Â∫ßÂÆüË°å: Âñ∂Ê•≠ÊôÇÈñìÂ§ñ„ÅÆ„Åü„ÇÅ‰ΩúÊàê„Åó„Å™„ÅÑ');
                    return;
                }

                console.log('‚úÖ Âç≥Â∫ßÂÆüË°å: Âñ∂Ê•≠ÊôÇÈñìÂÜÖ„ÅÆ„Åü„ÇÅ„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº‰ΩúÊàê');
                createTimeIndicator();
            }, 2000);

            // „Ç∞„É≠„Éº„Éê„É´„Å´ÂÖ¨Èñã
            window.createTimeIndicator = createTimeIndicator;
            window.updateTimeIndicator = updateTimeIndicator;

        </script>

        <!-- Tom Select JavaScript -->
        <script src="https://cdn.jsdelivr.net/npm/tom-select@2.3.1/dist/js/tom-select.complete.min.js"></script>
        <script>
            // Tom Select„ÅÆÂàùÊúüÂåñÈñ¢Êï∞
            function initializeMenuSelect() {
                // „Çª„É¨„ÇØ„Éà„Éú„ÉÉ„ÇØ„Çπ„ÇíÊé¢„Åô
                const menuSelect = document.querySelector('select[wire\\:model="newReservation.menu_id"]');

                if (menuSelect) {
                    // Êó¢Â≠ò„ÅÆTomSelect„Ç§„É≥„Çπ„Çø„É≥„Çπ„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØÁ†¥Ê£Ñ
                    if (menuSelect.tomselect) {
                        menuSelect.tomselect.destroy();
                    }

                    // Tom Select„ÇíÂàùÊúüÂåñ
                    try {
                        new TomSelect(menuSelect, {
                            searchField: ['text'],
                            placeholder: '„É°„Éã„É•„Éº„ÇíÊ§úÁ¥¢„ÉªÈÅ∏Êäû...',
                            maxOptions: null,
                            create: false,
                            allowEmptyOption: true,
                            render: {
                                option: function(data, escape) {
                                    return '<div>' + escape(data.text) + '</div>';
                                },
                                item: function(data, escape) {
                                    return '<div>' + escape(data.text) + '</div>';
                                },
                                no_results: function(data, escape) {
                                    return '<div class="no-results">Ë©≤ÂΩì„Åô„Çã„É°„Éã„É•„Éº„Åå„ÅÇ„Çä„Åæ„Åõ„Çì</div>';
                                }
                            },
                            onChange: function(value) {
                                // Livewire„ÅÆ„É¢„Éá„É´„ÇíÊõ¥Êñ∞
                                menuSelect.dispatchEvent(new Event('change', { bubbles: true }));
                            }
                        });
                        console.log('‚úÖ Tom Select initialized successfully');
                    } catch (error) {
                        console.error('‚ùå Tom Select initialization error:', error);
                    }
                }
            }

            // DOMContentLoaded„Ç§„Éô„É≥„Éà
            document.addEventListener('DOMContentLoaded', function() {
                console.log('DOMContentLoaded - initializing Tom Select');
                setTimeout(initializeMenuSelect, 500);
            });

            // Livewire„Ç§„Éô„É≥„Éà
            if (typeof Livewire !== 'undefined') {
                document.addEventListener('livewire:load', function() {
                    console.log('Livewire loaded');

                // modal-opened„Ç§„Éô„É≥„Éà„Çí„É™„ÉÉ„Çπ„É≥
                window.Livewire.on('modal-opened', () => {
                    console.log('Modal opened event received');
                    setTimeout(initializeMenuSelect, 300);
                });

                // Livewire„ÅÆÊõ¥Êñ∞Âæå
                window.Livewire.hook('message.processed', (message, component) => {
                    // reservationStep „Åå 3 „ÅÆÊôÇ„ÅÆ„ÅøÂàùÊúüÂåñ
                    if (component.fingerprint && component.fingerprint.name === 'app.filament.widgets.reservation-timeline-widget') {
                        const stepElement = document.querySelector('[wire\\:model="reservationStep"]');
                        if (stepElement && stepElement.value === '3') {
                            setTimeout(initializeMenuSelect, 300);
                        }
                    }
                });
            });

            // MutationObserver„Åß„É¢„Éº„ÉÄ„É´„ÅÆË°®Á§∫„ÇíÁõ£Ë¶ñ
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.type === 'childList') {
                        // Êñ∞Ë¶è‰∫àÁ¥Ñ„É¢„Éº„ÉÄ„É´„ÅåËøΩÂä†„Åï„Çå„Åü„ÅãÁ¢∫Ë™ç
                        const menuSelect = document.querySelector('select[wire\\:model="newReservation.menu_id"]');
                        if (menuSelect && !menuSelect.tomselect) {
                            console.log('Menu select detected by MutationObserver');
                            setTimeout(initializeMenuSelect, 100);
                        }
                    }
                });
            });

            // bodyË¶ÅÁ¥†„ÇíÁõ£Ë¶ñ
            document.addEventListener('DOMContentLoaded', function() {
                observer.observe(document.body, {
                    childList: true,
                    subtree: true
                });
            });

            // ÊâãÂãïÂàùÊúüÂåñÁî®„ÅÆ„Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞
            window.initMenuSelect = initializeMenuSelect;
        </script>

        <!-- Alpine.js„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂàÜÈõ¢ -->
        <script>
            document.addEventListener('alpine:init', () => {
                // „Çø„Ç§„É†„É©„Ç§„É≥„Ç¶„Ç£„Ç∏„Çß„ÉÉ„ÉàÂ∞ÇÁî®„ÅÆAlpine„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÂÆöÁæ©
                Alpine.data('timelineWidget', () => ({
                    init() {
                        // „Çø„Ç§„É†„É©„Ç§„É≥„Ç¶„Ç£„Ç∏„Çß„ÉÉ„Éà„ÅÆÂàùÊúüÂåñ
                        console.log('Timeline widget initialized');
                    },
                    // Filament„ÉÜ„Éº„Éñ„É´„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅÆÈñ¢Êï∞„Çí„ÉÄ„Éü„Éº„ÅßÂÆöÁæ©Ôºà„Ç®„É©„ÉºÂõûÈÅøÔºâ
                    isRecordSelected: () => false,
                    isGroupCollapsed: () => false,
                    table: null
                }));
            });

            // „Ç∞„É≠„Éº„Éê„É´„Å´„ÇÇ„ÉÄ„Éü„ÉºÈñ¢Êï∞„ÇíÂÆöÁæ©Ôºà„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÔºâ
            if (typeof window.isRecordSelected === 'undefined') {
                window.isRecordSelected = () => false;
            }
            if (typeof window.isGroupCollapsed === 'undefined') {
                window.isGroupCollapsed = () => false;
            }

            // ‰∫àÁ¥Ñ„Éá„Éº„Çø„ÇØ„É™„Ç¢„Ç§„Éô„É≥„Éà
            window.addEventListener('clear-reservation-data', () => {
                console.log('Clearing reservation data from session/local storage');
                // „Çª„ÉÉ„Ç∑„Éß„É≥„Çπ„Éà„É¨„Éº„Ç∏„Çí„ÇØ„É™„Ç¢
                sessionStorage.removeItem('selectedCustomer');
                sessionStorage.removeItem('phoneSearch');
                sessionStorage.removeItem('reservationStep');
                sessionStorage.removeItem('newCustomer');
                sessionStorage.removeItem('newReservation');

                // „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„ÇÇ„ÇØ„É™„Ç¢
                localStorage.removeItem('lastSelectedCustomer');
                localStorage.removeItem('lastPhoneSearch');
            });

            // „É¢„Éº„ÉÄ„É´ÈñãÈñâ„Ç§„Éô„É≥„Éà„ÅÆ„É™„Çπ„Éä„Éº
            window.addEventListener('modal-opened', () => {
                console.log('Modal opened event received');
                // Alpine.js„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÂÜçÂàùÊúüÂåñ
                if (typeof Alpine !== 'undefined') {
                    Alpine.nextTick(() => {
                        console.log('Alpine components refreshed');
                    });
                }
            });

            window.addEventListener('modal-closed', () => {
                console.log('Modal closed event received');
                // „É¢„Éº„ÉÄ„É´„ÅåÈñâ„Åò„ÅüÂæå„ÅÆ„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
                setTimeout(() => {
                    // Tom Select„ÅÆÂÜçÂàùÊúüÂåñ„ÅåÂøÖË¶Å„Å™Â†¥Âêà
                    if (typeof initMenuSelect !== 'undefined') {
                        initMenuSelect();
                    }
                }, 100);
            });
        </script>
    </x-filament::card>
    
    <!-- ‰∫àÁ¥ÑË©≥Á¥∞„Éë„Éç„É´ -->
    @if($selectedReservation)
        <div
            x-data="{
                show: true,
                close() {
                    this.show = false;
                    setTimeout(() => {
                        @this.closeReservationDetailModal();
                    }, 300);
                }
            }"
            x-show="show"
            x-transition:enter="transition ease-out duration-300"
            x-transition:enter-start="opacity-0"
            x-transition:enter-end="opacity-100"
            x-transition:leave="transition ease-in duration-200"
            x-transition:leave-start="opacity-100"
            x-transition:leave-end="opacity-0"
            x-on:click="close()"
            class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50"
        >
            <div 
                x-on:click.stop
                class="bg-white rounded-lg shadow-xl p-6 w-full max-w-lg"
            >
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-bold">‰∫àÁ¥ÑË©≥Á¥∞</h3>
                    <button
                        x-on:click="close()"
                        class="text-gray-400 hover:text-gray-600"
                    >
                        ‚úï
                    </button>
                </div>
                
                <div class="space-y-4">
                    <div class="bg-gray-50 p-3 rounded">
                        <p class="text-xs text-gray-500 mb-1">‰∫àÁ¥ÑÁï™Âè∑</p>
                        <p class="font-mono text-sm">{{ $selectedReservation->reservation_number }}</p>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-3">
                        <div>
                            <p class="text-xs text-gray-500 mb-1">È°ßÂÆ¢Âêç</p>
                            <p class="text-sm font-medium">
                                @if($selectedReservation->is_new_customer ?? false)
                                    <span style="background: #ff6b6b; color: white; padding: 2px 6px; border-radius: 4px; font-size: 11px; margin-right: 4px;">NEW</span>
                                @endif
                                {{ $selectedReservation->customer->last_name ?? '' }} {{ $selectedReservation->customer->first_name ?? '' }}
                            </p>
                        </div>
                        <div>
                            <p class="text-xs text-gray-500 mb-1">È°ßÂÆ¢„Çπ„ÉÜ„Éº„Çø„Çπ</p>
                            <p class="text-sm font-medium">
                                @if($selectedReservation->is_new_customer ?? false)
                                    <span class="inline-block px-2 py-1 bg-red-100 text-red-700 rounded text-xs">Êñ∞Ë¶èÈ°ßÂÆ¢</span>
                                @else
                                    <span class="inline-block px-2 py-1 bg-green-100 text-green-700 rounded text-xs">
                                        Êó¢Â≠òÈ°ßÂÆ¢Ôºà{{ $selectedReservation->customer_visit_count ?? 0 }}ÂõûÁõÆÔºâ
                                    </span>
                                @endif
                            </p>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-3">
                        <div>
                            <p class="text-xs text-gray-500 mb-1">„É°„Éã„É•„Éº</p>
                            <p class="text-sm font-medium">{{ $selectedReservation->menu->name ?? '„Å™„Åó' }}</p>
                        </div>
                        <div>
                            <p class="text-xs text-gray-500 mb-1">Êó•ÊôÇ</p>
                            <p class="text-sm font-medium">
                                {{ \Carbon\Carbon::parse($selectedReservation->reservation_date)->format('m/d') }}
                                {{ \Carbon\Carbon::parse($selectedReservation->start_time)->format('H:i') }}
                            </p>
                        </div>
                        <div>
                            <p class="text-xs text-gray-500 mb-1">ÊãÖÂΩì„Çπ„Çø„ÉÉ„Éï</p>
                            <p class="text-sm font-medium">
                                @if($selectedReservation->staff)
                                    <span class="inline-block px-2 py-1 bg-green-100 text-green-700 rounded text-xs">
                                        üë§ {{ $selectedReservation->staff->name }}
                                    </span>
                                @else
                                    <span class="inline-block px-2 py-1 bg-gray-100 text-gray-600 rounded text-xs">Êú™Ââ≤ÂΩì</span>
                                @endif
                            </p>
                        </div>
                        <div>
                            <p class="text-xs text-gray-500 mb-1">ÁèæÂú®„ÅÆÈÖçÁΩÆ</p>
                            <p class="text-sm font-medium">
                                @if($selectedReservation->is_sub)
                                    <span class="inline-block px-2 py-1 bg-purple-100 text-purple-700 rounded text-xs">„Çµ„ÉñÊû†</span>
                                @else
                                    <span class="inline-block px-2 py-1 bg-blue-100 text-blue-700 rounded text-xs">Â∏≠{{ $selectedReservation->seat_number }}</span>
                                @endif
                            </p>
                        </div>
                    </div>

                    {{-- Â∫ßÂ∏≠ÁßªÂãï„Çª„ÇØ„Ç∑„Éß„É≥ --}}
                    @include('filament.widgets.reservation-detail-modal-movement')
                </div>
            </div>
        </div>
    @endif

    {{-- Êñ∞Ë¶è‰∫àÁ¥Ñ„É¢„Éº„ÉÄ„É´ --}}
    @if($showNewReservationModal)
        <div class="fixed inset-0 bg-black bg-opacity-50 z-50 overflow-y-auto py-6 px-4" wire:click="closeNewReservationModal">
            <div class="bg-white rounded-lg p-6 max-w-2xl mx-auto relative" @click.stop="" style="min-height: min-content;">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-bold">
                        @if($modalMode === 'block')
                            ‰∫àÁ¥Ñ„Éñ„É≠„ÉÉ„ÇØË®≠ÂÆö
                        @else
                            Êñ∞Ë¶è‰∫àÁ¥Ñ‰ΩúÊàê
                        @endif
                    </h2>
                    <button wire:click="closeNewReservationModal" class="text-gray-500 hover:text-gray-700">
                        <x-heroicon-s-x-mark class="w-6 h-6" />
                    </button>
                </div>

                <!-- „É¢„Éº„ÉâÈÅ∏Êäû„Çø„Éñ -->
                @php
                    $user = auth()->user();
                    $canCreateBlock = $user->hasRole(['super_admin', 'owner', 'manager']);
                @endphp
                @if($reservationStep === 1 || $modalMode === 'block')
                    <div class="flex gap-2 mb-6 border-b border-gray-200">
                        <button
                            wire:click="$set('modalMode', 'reservation')"
                            class="px-4 py-2 -mb-px {{ $modalMode === 'reservation' ? 'border-b-2 border-primary-600 text-primary-600 font-medium' : 'text-gray-600 hover:text-gray-900' }} transition">
                            <x-heroicon-o-calendar class="w-5 h-5 inline mr-1" />
                            ‰∫àÁ¥Ñ‰ΩúÊàê
                        </button>
                        @if($canCreateBlock)
                            <button
                                wire:click="$set('modalMode', 'block')"
                                class="px-4 py-2 -mb-px {{ $modalMode === 'block' ? 'border-b-2 border-red-600 text-red-600 font-medium' : 'text-gray-600 hover:text-gray-900' }} transition">
                                <x-heroicon-o-no-symbol class="w-5 h-5 inline mr-1" />
                                ‰∫àÁ¥Ñ„Éñ„É≠„ÉÉ„ÇØ
                            </button>
                        @endif
                    </div>
                @endif

                @if($modalMode === 'block')
                    <!-- ‰∫àÁ¥Ñ„Éñ„É≠„ÉÉ„ÇØË®≠ÂÆö„Éï„Ç©„Éº„É† -->
                    <div class="space-y-4">
                        <!-- ÈÅ∏Êäû„Åï„Çå„ÅüÊôÇÈñì„Å®Â∏≠„ÅÆÊÉÖÂ†± -->
                        <div class="bg-red-50 border border-red-200 rounded-lg p-3">
                            <div class="text-sm font-medium text-red-900">
                                „Éñ„É≠„ÉÉ„ÇØÈñãÂßã: {{ $blockSettings['date'] }} {{ $blockSettings['start_time'] }}
                            </div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium mb-1">ÁµÇ‰∫ÜÊôÇÈñì <span class="text-red-500">*</span></label>
                            <input
                                type="time"
                                wire:model="blockSettings.end_time"
                                class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500"
                                required>
                            @if($blockSettings['end_time'] && $blockSettings['end_time'] <= $blockSettings['start_time'])
                                <p class="text-red-500 text-sm mt-1">ÁµÇ‰∫ÜÊôÇÈñì„ÅØÈñãÂßãÊôÇÈñì„Çà„ÇäÂæå„Å´Ë®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ</p>
                            @endif
                        </div>

                        <div>
                            <label class="block text-sm font-medium mb-1">ÁêÜÁî± <span class="text-red-500">*</span></label>
                            <select
                                wire:model="blockSettings.reason"
                                class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500">
                                <option value="‰ºëÊÜ©">‰ºëÊÜ©</option>
                                <option value="Ê∏ÖÊéÉ">Ê∏ÖÊéÉ</option>
                                <option value="„É°„É≥„ÉÜ„Éä„É≥„Çπ">„É°„É≥„ÉÜ„Éä„É≥„Çπ</option>
                                <option value="Á†î‰øÆ">Á†î‰øÆ</option>
                                <option value="„Åù„ÅÆ‰ªñ">„Åù„ÅÆ‰ªñ</option>
                            </select>
                        </div>

                        <div class="border-t pt-4">
                            <p class="text-sm text-gray-600 mb-2">
                                <x-heroicon-o-information-circle class="w-4 h-4 inline" />
                                Ë®≠ÂÆö„Åó„ÅüÊôÇÈñìÂ∏Ø„ÅØ‰∫àÁ¥Ñ„ÇíÂèó„Åë‰ªò„Åë„Çâ„Çå„Å™„Åè„Å™„Çä„Åæ„Åô
                            </p>
                        </div>

                        <div class="flex gap-2">
                            <button
                                wire:click="createBlockedTime"
                                class="flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition font-medium">
                                „Éñ„É≠„ÉÉ„ÇØ„ÇíË®≠ÂÆö
                            </button>
                        </div>
                    </div>
                @else
                    <!-- ‰∫àÁ¥Ñ‰ΩúÊàê„É¢„Éº„Éâ -->
                    @if($reservationStep === 1)
                    <!-- Step 1: È°ßÂÆ¢ÈÅ∏Êäû -->
                    <div class="space-y-4">
                        <!-- ÈÅ∏Êäû„Åï„Çå„ÅüÊôÇÈñì„Å®Â∏≠„ÅÆÊÉÖÂ†± -->
                        @if(!empty($newReservation['start_time']))
                            <div class="bg-blue-50 border border-blue-200 rounded-lg p-3">
                                <div class="text-sm font-medium text-blue-900">
                                    ‰∫àÁ¥ÑÊôÇÈñì: {{ $newReservation['date'] }} {{ $newReservation['start_time'] }}
                                    @if($useStaffAssignment)
                                        @if($newReservation['line_type'] === 'staff')
                                            @php
                                                $selectedStaff = \App\Models\User::find($newReservation['staff_id']);
                                            @endphp
                                            Ôºàüë§ {{ $selectedStaff ? $selectedStaff->name : '„Çπ„Çø„ÉÉ„Éï' }}Ôºâ
                                        @elseif($newReservation['line_type'] === 'unassigned')
                                            ÔºàÊú™ÊåáÂÆö„É©„Ç§„É≥Ôºâ
                                        @endif
                                    @else
                                        @if($newReservation['line_type'] === 'main')
                                            ÔºàÂ∏≠{{ $newReservation['line_number'] }}Ôºâ
                                        @else
                                            Ôºà„Çµ„Éñ„É©„Ç§„É≥Ôºâ
                                        @endif
                                    @endif
                                </div>
                            </div>
                        @endif
                        
                        <div class="grid grid-cols-2 gap-2 mb-4">
                            <button 
                                wire:click="$set('customerSelectionMode', 'existing')"
                                class="px-4 py-2 {{ $customerSelectionMode === 'existing' ? 'bg-primary-600 text-white' : 'bg-gray-100' }} rounded-lg transition">
                                Êó¢Â≠òÈ°ßÂÆ¢
                            </button>
                            <button 
                                wire:click="$set('customerSelectionMode', 'new')"
                                class="px-4 py-2 {{ $customerSelectionMode === 'new' ? 'bg-primary-600 text-white' : 'bg-gray-100' }} rounded-lg transition">
                                Êñ∞Ë¶èÈ°ßÂÆ¢
                            </button>
                        </div>
                        
                        @if($customerSelectionMode === 'existing')
                            <div>
                                <label class="block text-sm font-medium mb-2">ÈõªË©±Áï™Âè∑„ÉªÂêçÂâç„ÅßÊ§úÁ¥¢</label>
                                <input 
                                    type="text" 
                                    wire:model.live.debounce.300ms="phoneSearch"
                                    class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                    placeholder="ÈõªË©±Áï™Âè∑„Åæ„Åü„ÅØÂêçÂâç„ÇíÂÖ•Âäõ"
                                    autofocus>
                            </div>
                        @else
                            <button 
                                wire:click="$set('reservationStep', 2); $set('newCustomer.phone', phoneSearch)"
                                class="w-full px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition">
                                Êñ∞Ë¶èÈ°ßÂÆ¢ÊÉÖÂ†±„ÇíÂÖ•Âäõ
                            </button>
                        @endif
                        
                        @if(strlen($phoneSearch) >= 2)
                            @if(count($searchResults) > 0)
                                <div class="border rounded-lg divide-y">
                                    <div class="bg-gray-50 px-4 py-2 font-medium text-sm">
                                        Ê§úÁ¥¢ÁµêÊûú ({{ count($searchResults) }}‰ª∂)
                                    </div>
                                    @foreach($searchResults as $customer)
                                        <div 
                                            wire:click="selectCustomer({{ $customer->id }})"
                                            class="px-4 py-3 hover:bg-blue-50 cursor-pointer transition">
                                            <div class="flex justify-between items-start">
                                                <div>
                                                    <div class="font-medium">
                                                        {{ $customer->last_name }} {{ $customer->first_name }}
                                                        <span class="text-sm text-gray-500">({{ $customer->last_name_kana }} {{ $customer->first_name_kana }})</span>
                                                    </div>
                                                    <div class="text-sm text-gray-600">
                                                        üìû {{ $customer->phone }}
                                                        @if($customer->email)
                                                            | ‚úâÔ∏è {{ $customer->email }}
                                                        @endif
                                                    </div>
                                                </div>
                                                <div class="text-right text-sm">
                                                    <div class="text-gray-500">Êù•Â∫óÂõûÊï∞: {{ $customer->reservations_count ?? 0 }}Âõû</div>
                                                    @if($customer->last_visit_date)
                                                        <div class="text-gray-500">ÊúÄÁµÇ: {{ \Carbon\Carbon::parse($customer->last_visit_date)->format('n/j') }}</div>
                                                    @endif
                                                </div>
                                            </div>
                                        </div>
                                    @endforeach
                                </div>
                            @else
                                <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                                    <div class="flex items-center gap-2 mb-2">
                                        <x-heroicon-o-exclamation-triangle class="w-5 h-5 text-yellow-600" />
                                        <span class="font-medium">Ë©≤ÂΩì„Åô„ÇãÈ°ßÂÆ¢„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì</span>
                                    </div>
                                    <button 
                                        wire:click="startNewCustomerRegistration"
                                        class="w-full mt-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition">
                                        Êñ∞Ë¶èÈ°ßÂÆ¢„Å®„Åó„Å¶ÁôªÈå≤
                                    </button>
                                </div>
                            @endif
                        @endif
                    </div>
                @endif
                
                <!-- Step 2: Êñ∞Ë¶èÈ°ßÂÆ¢ÁôªÈå≤ -->
                @if($reservationStep === 2)
                    <div class="space-y-4">
                        <div class="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4">
                            <div class="font-medium text-blue-900">Êñ∞Ë¶èÈ°ßÂÆ¢ÁôªÈå≤</div>
                            <div class="text-sm text-blue-700">ÈõªË©±Áï™Âè∑: {{ $phoneSearch }}</div>
                        </div>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium mb-1">Âßì <span class="text-red-500">*</span></label>
                                <input 
                                    type="text" 
                                    wire:model="newCustomer.last_name"
                                    class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                    placeholder="Â±±Áî∞">
                            </div>
                            <div>
                                <label class="block text-sm font-medium mb-1">Âêç <span class="text-red-500">*</span></label>
                                <input 
                                    type="text" 
                                    wire:model="newCustomer.first_name"
                                    class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                    placeholder="Â§™ÈÉé">
                            </div>
                            <div class="col-span-2">
                                <label class="block text-sm font-medium mb-1">ÈõªË©±Áï™Âè∑ <span class="text-red-500">*</span></label>
                                <input 
                                    type="tel" 
                                    wire:model="newCustomer.phone"
                                    class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                    placeholder="090-1234-5678">
                            </div>
                            <div class="col-span-2">
                                <label class="block text-sm font-medium mb-1">„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ</label>
                                <input 
                                    type="email" 
                                    wire:model="newCustomer.email"
                                    class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                    placeholder="yamada@example.com">
                            </div>
                        </div>
                        
                        <div class="flex gap-2">
                            <button 
                                wire:click="$set('reservationStep', 1)"
                                class="px-4 py-2 border rounded-lg hover:bg-gray-50 transition">
                                Êàª„Çã
                            </button>
                            <button 
                                wire:click="createNewCustomer"
                                class="flex-1 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition">
                                ÁôªÈå≤„Åó„Å¶‰∫àÁ¥Ñ‰ΩúÊàê„Å∏
                            </button>
                        </div>
                    </div>
                @endif
                
                <!-- Step 3: ‰∫àÁ¥ÑË©≥Á¥∞ÂÖ•Âäõ -->
                @if($reservationStep === 3)
                    <div class="space-y-4">
                        @if($selectedCustomer)
                            <div class="bg-green-50 border border-green-200 rounded-lg p-3">
                                <div class="font-medium text-green-900">
                                    {{ $selectedCustomer->last_name }} {{ $selectedCustomer->first_name }} Êßò
                                </div>
                                <div class="text-sm text-green-700">
                                    üìû {{ $selectedCustomer->phone }}
                                    @if($selectedCustomer->email)
                                        | ‚úâÔ∏è {{ $selectedCustomer->email }}
                                    @endif
                                </div>
                            </div>
                        @endif

                        <!-- „É°„Éã„É•„ÉºÈÅ∏Êäû„ÇíÂÖà„Å´ÈÖçÁΩÆ -->
                        <div>
                            <label class="block text-sm font-medium mb-2">„É°„Éã„É•„Éº</label>

                            <!-- „Çà„Åè‰Ωø„ÅÜ„É°„Éã„É•„Éº„ÅÆ„ÇØ„Ç§„ÉÉ„ÇØÈÅ∏Êäû„Éú„Çø„É≥ -->
                            @php
                                $popularMenus = \App\Models\Menu::where('is_available', true)
                                    ->where('is_visible_to_customer', true)
                                    ->whereIn('name', ['Ë¶ñÂäõÂõûÂæ©„Ç≥„Éº„Çπ(60ÂàÜ)', 'Ê∞¥Á¥†Âê∏ÂÖ•„Ç≥„Éº„Çπ(90ÂàÜ)', '„Çµ„Éñ„Çπ„ÇØ60ÂàÜ'])
                                    ->orderBy('is_subscription', 'desc')
                                    ->limit(3)
                                    ->get();
                            @endphp

                            @if($popularMenus->count() > 0)
                                <div class="mb-3">
                                    <p class="text-xs text-gray-500 mb-2">„Çà„Åè‰Ωø„ÅÜ„É°„Éã„É•„ÉºÔºö</p>
                                    <div class="flex flex-wrap gap-2">
                                        @foreach($popularMenus as $menu)
                                            <button
                                                type="button"
                                                wire:click="selectMenu({{ $menu->id }})"
                                                class="px-3 py-2 text-xs border rounded-lg hover:bg-blue-50 hover:border-blue-400 transition-colors {{ $newReservation['menu_id'] == $menu->id ? 'bg-blue-50 border-blue-500 text-blue-700' : 'bg-white border-gray-300' }}">
                                                <div class="font-medium">
                                                    {{ $menu->is_subscription ? 'üîÑ ' : '' }}{{ Str::limit($menu->name, 20) }}
                                                </div>
                                                <div class="text-gray-500 text-xs mt-1">
                                                    {{ $menu->duration_minutes }}ÂàÜ
                                                </div>
                                            </button>
                                        @endforeach
                                    </div>
                                </div>
                            @endif

                            <!-- Ê§úÁ¥¢„Éú„ÉÉ„ÇØ„ÇπÊîπËâØÁâà -->
                            <div class="relative">
                                <div class="relative">
                                    <input
                                        type="text"
                                        wire:model.live.debounce.200ms="menuSearch"
                                        wire:focus="$set('showAllMenus', true)"
                                        placeholder="„ÇØ„É™„ÉÉ„ÇØ„ÅßÂÖ®„É°„Éã„É•„ÉºË°®Á§∫ / ÂÖ•Âäõ„ÅßÊ§úÁ¥¢"
                                        class="w-full px-3 py-2 pl-10 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 cursor-pointer">
                                    <svg class="absolute left-3 top-3 w-4 h-4 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"/>
                                    </svg>
                                </div>

                                @if($menuSearch || $showAllMenus)
                                    <!-- Ê§úÁ¥¢ÁµêÊûú/ÂÖ®„É°„Éã„É•„Éº„ÅÆ„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥ -->
                                    <div class="absolute z-50 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-xl max-h-80 overflow-y-auto"
                                         x-data
                                         @click.outside="@this.set('showAllMenus', false)">
                                        @php
                                            $displayMenus = $menuSearch ? $this->getFilteredMenus() : \App\Models\Menu::where('is_available', true)
                                                ->where('is_visible_to_customer', true)
                                                ->orderBy('is_subscription', 'desc')
                                                ->orderBy('sort_order')
                                                ->get();
                                        @endphp

                                        @if($displayMenus->count() > 0)
                                            {{-- „Çµ„Éñ„Çπ„ÇØ„É°„Éã„É•„Éº --}}
                                            @php
                                                $subscriptionMenus = $displayMenus->where('is_subscription', true);
                                            @endphp
                                            @if($subscriptionMenus->count() > 0)
                                                <div class="border-b border-gray-200">
                                                    <div class="px-4 py-2 bg-blue-50 text-xs font-semibold text-blue-700 sticky top-0">
                                                        „Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥
                                                    </div>
                                                    @foreach($subscriptionMenus as $menu)
                                                        <button
                                                            type="button"
                                                            wire:click="selectMenu({{ $menu->id }})"
                                                            class="w-full px-4 py-3 text-left hover:bg-blue-50 focus:bg-blue-50 focus:outline-none transition-colors">
                                                            <div class="flex items-center justify-between">
                                                                <div>
                                                                    <div class="font-medium text-blue-600">
                                                                        üîÑ {{ $menu->name }}
                                                                    </div>
                                                                    <div class="text-sm text-gray-600">
                                                                        {{ $menu->duration_minutes }}ÂàÜ - „Çµ„Éñ„Çπ„ÇØ
                                                                    </div>
                                                                </div>
                                                                @if($newReservation['menu_id'] == $menu->id)
                                                                    <svg class="w-5 h-5 text-blue-600" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                                                    </svg>
                                                                @endif
                                                            </div>
                                                        </button>
                                                    @endforeach
                                                </div>
                                            @endif

                                            {{-- ÈÄöÂ∏∏„É°„Éã„É•„Éº --}}
                                            @php
                                                $regularMenus = $displayMenus->where('is_subscription', false);
                                            @endphp
                                            @if($regularMenus->count() > 0)
                                                <div>
                                                    <div class="px-4 py-2 bg-gray-50 text-xs font-semibold text-gray-600 sticky top-0">
                                                        ÈÄöÂ∏∏„É°„Éã„É•„Éº
                                                    </div>
                                                    @foreach($regularMenus as $menu)
                                                        <button
                                                            type="button"
                                                            wire:click="selectMenu({{ $menu->id }})"
                                                            class="w-full px-4 py-3 text-left hover:bg-gray-50 focus:bg-gray-50 focus:outline-none border-b border-gray-100 last:border-b-0 transition-colors">
                                                            <div class="flex items-center justify-between">
                                                                <div>
                                                                    <div class="font-medium text-gray-900">
                                                                        {{ $menu->name }}
                                                                    </div>
                                                                    <div class="text-sm text-gray-600">
                                                                        {{ $menu->duration_minutes }}ÂàÜ - ¬•{{ number_format($menu->price) }}
                                                                    </div>
                                                                </div>
                                                                @if($newReservation['menu_id'] == $menu->id)
                                                                    <svg class="w-5 h-5 text-blue-600" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                                                    </svg>
                                                                @endif
                                                            </div>
                                                        </button>
                                                    @endforeach
                                                </div>
                                            @endif
                                        @else
                                            <div class="px-4 py-3 text-gray-500 text-center">
                                                Ë©≤ÂΩì„Åô„Çã„É°„Éã„É•„Éº„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì
                                            </div>
                                        @endif
                                    </div>
                                @endif
                            </div>

                            <!-- ÈÅ∏Êäû„Åï„Çå„Åü„É°„Éã„É•„Éº„ÅÆË°®Á§∫ -->
                            @if($newReservation['menu_id'])
                                @php
                                    $selectedMenu = \App\Models\Menu::find($newReservation['menu_id']);
                                @endphp
                                @if($selectedMenu)
                                    <div class="mt-2 p-3 bg-blue-50 border border-blue-200 rounded-lg">
                                        <div class="flex justify-between items-center">
                                            <div>
                                                <div class="font-medium text-blue-900">{{ $selectedMenu->name }}</div>
                                                <div class="text-sm text-blue-700">
                                                    {{ $selectedMenu->duration_minutes }}ÂàÜ - ¬•{{ number_format($selectedMenu->price) }}
                                                </div>
                                            </div>
                                            <button
                                                type="button"
                                                wire:click="$set('newReservation.menu_id', '')"
                                                class="text-blue-600 hover:text-blue-800">
                                                <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
                                @endif
                            @else
                                <p class="mt-2 text-sm text-gray-500">„É°„Éã„É•„Éº„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ</p>
                            @endif
                        </div>

                        <!-- ‰∫àÁ¥ÑÊó•ÊôÇ„Çª„ÇØ„Ç∑„Éß„É≥ -->
                        <div>
                            <label class="block text-sm font-medium mb-1">‰∫àÁ¥ÑÊó•ÊôÇ</label>
                            <div class="grid grid-cols-2 gap-2">
                                <input
                                    type="date"
                                    wire:model="newReservation.date"
                                    value="{{ $selectedDate }}"
                                    class="px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500">
                                <input
                                    type="time"
                                    wire:model="newReservation.start_time"
                                    class="px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500">
                            </div>

                            <!-- ÊâÄË¶ÅÊôÇÈñì„ÅÆË°®Á§∫Ôºà„É°„Éã„É•„ÉºÈÅ∏ÊäûÂæå„ÅÆ„ÅøÔºâ -->
                            @if($newReservation['menu_id'])
                                @php
                                    $selectedMenuDuration = \App\Models\Menu::find($newReservation['menu_id']);
                                @endphp
                                @if($selectedMenuDuration)
                                    <div class="mt-2 px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg">
                                        <span class="text-sm text-gray-600">ÊâÄË¶ÅÊôÇÈñìÔºö</span>
                                        <span class="font-medium">{{ $selectedMenuDuration->duration_minutes }}ÂàÜ</span>
                                        @if($newReservation['start_time'])
                                            @php
                                                $endTime = \Carbon\Carbon::parse($newReservation['start_time'])
                                                    ->addMinutes($selectedMenuDuration->duration_minutes)
                                                    ->format('H:i');
                                            @endphp
                                            <span class="text-sm text-gray-600 ml-2">
                                                ({{ $newReservation['start_time'] }} „Äú {{ $endTime }})
                                            </span>
                                        @endif
                                    </div>
                                @endif
                            @else
                                <p class="mt-2 text-sm text-amber-600">
                                    ‚Äª „É°„Éã„É•„Éº„ÇíÈÅ∏Êäû„Åô„Çã„Å®ÊâÄË¶ÅÊôÇÈñì„ÅåËá™ÂãïË®≠ÂÆö„Åï„Çå„Åæ„Åô
                                </p>
                            @endif
                        </div>

                        <!-- „Çπ„Çø„ÉÉ„ÉïÈÅ∏ÊäûÔºà„Ç∑„Éï„Éà„Éô„Éº„Çπ„É¢„Éº„Éâ„ÅÆÂ†¥Âêà„ÅÆ„ÅøÔºâ -->
                        @if($useStaffAssignment)
                            <div>
                                <label class="block text-sm font-medium mb-1">ÊãÖÂΩì„Çπ„Çø„ÉÉ„Éï</label>
                                @php
                                    $availableStaff = $this->getAvailableStaff();
                                @endphp
                                <select
                                    wire:model="newReservation.staff_id"
                                    class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500">
                                    <option value="">Êú™ÊåáÂÆö</option>
                                    @foreach($availableStaff as $staff)
                                        <option value="{{ $staff['id'] }}">
                                            üë§ {{ $staff['name'] }} ({{ \Carbon\Carbon::parse($staff['start_time'])->format('H:i') }}-{{ \Carbon\Carbon::parse($staff['end_time'])->format('H:i') }})
                                        </option>
                                    @endforeach
                                </select>
                                <p class="text-xs text-gray-500 mt-1">‚Äª Êú™ÊåáÂÆö„ÅÆÂ†¥Âêà„ÄÅ„ÄåÊú™ÊåáÂÆö„Äç„É©„Ç§„É≥„Å´ÈÖçÁΩÆ„Åï„Çå„Åæ„Åô</p>
                            </div>
                        @else
                            <div>
                                <label class="block text-sm font-medium mb-1">„É©„Ç§„É≥ÔºàÂ∏≠Ôºâ</label>
                                <select
                                    wire:model="newReservation.line_type"
                                    class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500">
                                    <option value="main">„É°„Ç§„É≥„É©„Ç§„É≥</option>
                                    <option value="sub">„Çµ„Éñ„É©„Ç§„É≥</option>
                                </select>
                            </div>

                            @if($newReservation['line_type'] === 'main')
                                <div>
                                    <label class="block text-sm font-medium mb-1">Â∏≠Áï™Âè∑</label>
                                    <select
                                        wire:model="newReservation.line_number"
                                        class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500">
                                        @for($i = 1; $i <= 3; $i++)
                                            <option value="{{ $i }}">Â∏≠{{ $i }}</option>
                                        @endfor
                                    </select>
                                </div>
                            @endif
                        @endif
                        
                        <div>
                            <label class="block text-sm font-medium mb-1">ÂÇôËÄÉ</label>
                            <textarea 
                                wire:model="newReservation.notes"
                                class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                                rows="3"
                                placeholder="ÈõªË©±‰∫àÁ¥Ñ„ÄÅÁâπË®ò‰∫ãÈ†Ö„Å™„Å©"></textarea>
                        </div>
                        
                        <div class="flex gap-2">
                            <button 
                                wire:click="$set('reservationStep', 1)"
                                class="px-4 py-2 border rounded-lg hover:bg-gray-50 transition">
                                Êàª„Çã
                            </button>
                            <button 
                                wire:click="createReservation"
                                class="flex-1 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition font-medium">
                                ‰∫àÁ¥Ñ„Çí‰ΩúÊàê
                            </button>
                        </div>
                    </div>
                    @endif
                @endif
            </div>
        </div>
    @endif

    <!-- „Éá„Éê„ÉÉ„Ç∞Áî®JavaScript -->
    <script>
        document.addEventListener('livewire:load', function () {
            // „Éá„Éê„ÉÉ„Ç∞„É≠„Ç∞„Ç§„Éô„É≥„Éà„Çí„É™„ÉÉ„Çπ„É≥
            window.Livewire.on('debug-log', (data) => {
                console.group('üîç ReservationTimelineWidget Debug');
                console.log('Message:', data.message);
                if (data.selectedStore !== undefined) {
                    console.log('Selected Store:', data.selectedStore);
                }
                if (data.hasSelectedStore !== undefined) {
                    console.log('Has Selected Store:', data.hasSelectedStore);
                }
                if (data.storeId !== undefined) {
                    console.log('Store ID for filter:', data.storeId);
                }
                if (data.count !== undefined) {
                    console.log('Category Count:', data.count);
                }
                if (data.categories !== undefined) {
                    console.log('Categories:', data.categories);
                }
                console.groupEnd();
            });

            // Â∫óËàóÈÅ∏ÊäûÂ§âÊõ¥ÊôÇ„ÅÆ„Éá„Éê„ÉÉ„Ç∞
            document.addEventListener('change', function(e) {
                if (e.target.matches('select[wire\\:model\\.live="selectedStore"]')) {
                    console.log('üè™ Store selection changed to:', e.target.value);
                }
            });
        });
    </script>
</x-filament-widgets::widget>