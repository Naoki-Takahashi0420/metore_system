name: Final Fix V2

on:
  workflow_dispatch:

jobs:
  fix-login:
    runs-on: ubuntu-latest
    
    steps:
      - name: Complete login fix
        env:
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 600 key.pem
          
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -i key.pem ubuntu@13.115.38.179 << 'EOF'
            cd /var/www/html/current
            
            echo "=== 権限修正 ==="
            sudo touch storage/logs/laravel.log
            sudo chown -R www-data:www-data storage
            sudo chown -R www-data:www-data bootstrap/cache
            sudo chmod -R 775 storage
            sudo chmod -R 775 bootstrap/cache
            
            echo ""
            echo "=== 環境変数修正 ==="
            sudo sed -i 's|APP_URL=.*|APP_URL=http://13.115.38.179|' .env
            sudo sed -i 's/SESSION_DRIVER=.*/SESSION_DRIVER=file/' .env
            sudo sed -i 's/CACHE_DRIVER=.*/CACHE_DRIVER=file/' .env
            grep -E "APP_URL|SESSION_DRIVER|CACHE_DRIVER" .env
            
            echo ""
            echo "=== キャッシュクリア ==="
            sudo rm -rf bootstrap/cache/*.php
            sudo rm -rf storage/framework/cache/data/*
            sudo rm -rf storage/framework/sessions/*
            sudo rm -rf storage/framework/views/*
            
            echo ""
            echo "=== 管理者アカウント作成（PHP） ==="
            sudo -u www-data php -r "
              require 'vendor/autoload.php';
              \$app = require 'bootstrap/app.php';
              \$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();
              
              // 既存削除
              \$app['db']->table('users')->where('email', 'admin@xsyumeno.com')->delete();
              
              // 新規作成
              \$id = \$app['db']->table('users')->insertGetId([
                'name' => 'Administrator',
                'email' => 'admin@xsyumeno.com',
                'password' => '\$2y\$10\$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi',
                'role' => 'superadmin',
                'is_active' => 1,
                'email_verified_at' => date('Y-m-d H:i:s'),
                'created_at' => date('Y-m-d H:i:s'),
                'updated_at' => date('Y-m-d H:i:s')
              ]);
              
              echo 'Admin created with ID: ' . \$id . PHP_EOL;
              
              // 確認
              \$admin = \$app['db']->table('users')->where('email', 'admin@xsyumeno.com')->first();
              if (\$admin) {
                echo 'SUCCESS: Admin exists' . PHP_EOL;
                echo 'Email: ' . \$admin->email . PHP_EOL;
                echo 'Role: ' . \$admin->role . PHP_EOL;
              }
            "
            
            echo ""
            echo "=== キャッシュ再構築 ==="
            sudo -u www-data php artisan config:cache
            sudo -u www-data php artisan route:cache
            sudo -u www-data php artisan view:cache
            
            echo ""
            echo "=== Livewire再設定 ==="
            sudo -u www-data php artisan livewire:discover
            
            echo ""
            echo "=== サービス再起動 ==="
            sudo systemctl restart php8.3-fpm
            sudo systemctl restart nginx
            
            echo ""
            echo "=== 動作確認 ==="
            sleep 2
            
            # ログインページ確認
            response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/admin/login)
            echo "Login page HTTP status: $response"
            
            # CSRFトークン確認
            echo ""
            echo "CSRF token check:"
            curl -s http://localhost/admin/login | grep -o 'csrf-token.*content="[^"]*"' | head -1
            
            # ログインテスト（CURLで）
            echo ""
            echo "=== ログインテスト ==="
            
            # まずCSRFトークンとクッキーを取得
            csrf_token=$(curl -s -c /tmp/cookies.txt http://localhost/admin/login | grep -o 'name="_token" value="[^"]*"' | sed 's/.*value="\([^"]*\)".*/\1/')
            
            if [ ! -z "$csrf_token" ]; then
              echo "CSRF token found: ${csrf_token:0:10}..."
              
              # ログイン試行
              login_response=$(curl -s -L -b /tmp/cookies.txt -c /tmp/cookies.txt \
                -X POST http://localhost/admin/login \
                -H "Content-Type: application/x-www-form-urlencoded" \
                -d "_token=$csrf_token&email=admin@xsyumeno.com&password=password" \
                -o /dev/null -w "%{http_code}")
              
              echo "Login attempt response: $login_response"
              
              # クッキー確認
              echo "Cookies after login:"
              cat /tmp/cookies.txt | grep -v "^#"
            else
              echo "No CSRF token found in form"
            fi
            
            echo ""
            echo "================================"
            echo "COMPLETE!"
            echo "================================"
            echo "Please test login at:"
            echo "URL: http://13.115.38.179/admin/login"
            echo "Email: admin@xsyumeno.com"
            echo "Password: password"
            echo "================================"
          EOF
          
          rm key.pem