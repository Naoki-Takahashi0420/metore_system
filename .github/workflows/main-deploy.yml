name: Main Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          echo "Testing SSH key format..."
          ssh-keygen -l -f ~/.ssh/deploy_key || echo "Key format check failed"
      
      - name: Test SSH Connection
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH connection successful!'" || echo "SSH failed"
      
      - name: Deploy to EC2
        if: success()
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Create app directory if not exists
            sudo mkdir -p /var/www/html
            cd /var/www/html
            
            # Clone or pull latest code
            if [ -d ".git" ]; then
              sudo git pull origin main
            else
              sudo git clone https://github.com/Naoki-Takahashi0420/metore_system.git .
            fi
            
            # Install/update dependencies
            sudo composer install --no-dev --optimize-autoloader
            
            # Set permissions
            sudo chown -R www-data:www-data /var/www/html
            sudo chmod -R 755 /var/www/html
            sudo chmod -R 775 storage bootstrap/cache
            
            # Run migrations
            sudo php artisan migrate --force
            
            # Clear caches
            sudo php artisan config:cache
            sudo php artisan route:cache
            sudo php artisan view:cache
            
            # Restart services
            sudo systemctl restart php8.3-fpm
            sudo systemctl restart nginx
            
            echo "✅ Deployment completed!"
          EOF
      
      - name: Verify deployment
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.EC2_HOST }})
          if [ $response -eq 200 ]; then
            echo "✅ Site is up and running!"
          else
            echo "❌ Site returned HTTP $response"
            exit 1
          fi