name: Check Admin Login Issue

on:
  workflow_dispatch:

jobs:
  debug-login:
    runs-on: ubuntu-latest
    
    steps:
      - name: Investigate admin login issue
        env:
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 600 key.pem
          
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -i key.pem ubuntu@13.115.38.179 << 'EOF'
            cd /var/www/html/current
            
            echo "=== Check existing admin users ==="
            sudo -u www-data php artisan tinker --execute="
            \$users = \App\Models\User::all();
            echo 'Total users: ' . \$users->count() . '\n';
            foreach (\$users as \$user) {
                echo 'ID: ' . \$user->id . ', Email: ' . \$user->email . ', Role: ' . (\$user->role ?? 'null') . ', Active: ' . (\$user->is_active ? 'Yes' : 'No') . '\n';
            }
            "
            
            echo ""
            echo "=== Test specific admin account ==="
            sudo -u www-data php artisan tinker --execute="
            \$admin = \App\Models\User::where('email', 'admin@xsyumeno.com')->first();
            if (\$admin) {
                echo 'Admin found - ID: ' . \$admin->id . '\n';
                echo 'Email: ' . \$admin->email . '\n';
                echo 'Role: ' . (\$admin->role ?? 'null') . '\n';
                echo 'Active: ' . (\$admin->is_active ? 'Yes' : 'No') . '\n';
                echo 'Password hash length: ' . strlen(\$admin->password) . '\n';
                echo 'Can access panel: ' . (\$admin->canAccessPanel(app('filament')->getPanel('admin')) ? 'Yes' : 'No') . '\n';
            } else {
                echo 'Admin NOT FOUND!\n';
            }
            "
            
            echo ""
            echo "=== Check password verification ==="
            sudo -u www-data php artisan tinker --execute="
            \$admin = \App\Models\User::where('email', 'admin@xsyumeno.com')->first();
            if (\$admin) {
                \$passwordCheck = \Hash::check('Admin123!', \$admin->password);
                echo 'Password check result: ' . (\$passwordCheck ? 'VALID' : 'INVALID') . '\n';
            }
            "
            
            echo ""
            echo "=== Delete and recreate admin user ==="
            sudo -u www-data php artisan tinker --execute="
            \App\Models\User::where('email', 'admin@xsyumeno.com')->delete();
            \$newAdmin = \App\Models\User::create([
                'name' => 'Administrator',
                'email' => 'admin@xsyumeno.com',
                'password' => \Hash::make('Admin123!'),
                'role' => 'superadmin',
                'is_active' => true,
                'email_verified_at' => now()
            ]);
            echo 'New admin created with ID: ' . \$newAdmin->id . '\n';
            echo 'Can access panel: ' . (\$newAdmin->canAccessPanel(app('filament')->getPanel('admin')) ? 'Yes' : 'No') . '\n';
            "
            
            echo ""
            echo "=== Verify new admin ==="
            sudo -u www-data php artisan tinker --execute="
            \$admin = \App\Models\User::where('email', 'admin@xsyumeno.com')->first();
            if (\$admin) {
                echo 'Final verification:\n';
                echo 'ID: ' . \$admin->id . '\n';
                echo 'Email: ' . \$admin->email . '\n';
                echo 'Role: ' . \$admin->role . '\n';
                echo 'Active: ' . (\$admin->is_active ? 'Yes' : 'No') . '\n';
                echo 'Password check: ' . (\Hash::check('Admin123!', \$admin->password) ? 'VALID' : 'INVALID') . '\n';
            }
            "
            
            echo ""
            echo "=== Test login with curl ==="
            CSRF_TOKEN=$(curl -s http://localhost/admin/login | grep '_token' | head -1 | sed 's/.*value="\([^"]*\)".*/\1/')
            echo "CSRF Token: $CSRF_TOKEN"
            
            curl -c cookies.txt -b cookies.txt -X POST http://localhost/admin/login \
              -H "Content-Type: application/x-www-form-urlencoded" \
              -d "_token=$CSRF_TOKEN&email=admin@xsyumeno.com&password=Admin123!" \
              -w "HTTP Status: %{http_code}\n" \
              -s -o login_response.txt
            
            echo "Login response preview:"
            head -5 login_response.txt
            
            echo "Admin login investigation complete"
          EOF
          
          rm key.pem