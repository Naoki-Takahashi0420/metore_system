name: Install Vendor Directory

on:
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    
    steps:
      - name: Install vendor properly
        env:
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 600 key.pem
          
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@13.115.38.179 << 'EOF'
            echo "=== Current Directory Check ==="
            cd /var/www/html/current
            pwd
            ls -la | head -10
            
            echo -e "\n=== Check composer.json ==="
            if [ -f "composer.json" ]; then
              echo "composer.json exists"
              head -20 composer.json
            else
              echo "ERROR: composer.json not found!"
              exit 1
            fi
            
            echo -e "\n=== Installing Composer Dependencies ==="
            # PHPバージョン確認
            php -v
            
            # Composerバージョン確認
            composer --version
            
            # vendorディレクトリを削除
            sudo rm -rf vendor
            rm -f composer.lock
            
            # Composerキャッシュクリア
            composer clear-cache
            
            # インストール実行（エラー詳細表示）
            composer install --no-interaction --prefer-dist --optimize-autoloader --verbose
            
            echo -e "\n=== Verify Installation ==="
            if [ -d "vendor" ]; then
              echo "Vendor directory created successfully"
              ls -la vendor/ | head -10
              
              # laravelディレクトリ確認
              if [ -d "vendor/laravel" ]; then
                echo "Laravel packages installed:"
                ls -la vendor/laravel/ | head -10
              fi
            else
              echo "ERROR: Vendor directory not created!"
            fi
            
            echo -e "\n=== Setting Permissions ==="
            sudo chown -R www-data:www-data .
            sudo chmod -R 755 .
            sudo chmod -R 777 storage bootstrap/cache
            
            echo -e "\n=== Clear Caches ==="
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            php artisan route:clear
            
            echo -e "\n=== Restart Services ==="
            sudo systemctl restart php8.3-fpm
            sudo systemctl restart nginx
            
            echo -e "\n=== Test Application ==="
            curl -I http://localhost/
            curl -I http://localhost/admin/login
            
            echo -e "\n=== Check for Errors ==="
            tail -5 /var/log/nginx/error.log
          EOF
          
          rm key.pem