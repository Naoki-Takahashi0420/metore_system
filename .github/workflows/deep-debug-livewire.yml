name: Deep Debug Livewire

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    
    steps:
      - name: Deep debug Livewire issue
        env:
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 600 key.pem
          
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -i key.pem ubuntu@13.115.38.179 << 'EOF'
            cd /var/www/html/current
            
            echo "=== Laravelデバッグモード有効化 ==="
            sudo sed -i 's/APP_DEBUG=.*/APP_DEBUG=true/' .env
            grep APP_DEBUG .env
            
            echo ""
            echo "=== キャッシュクリア ==="
            sudo -u www-data php artisan config:clear
            sudo -u www-data php artisan cache:clear
            
            echo ""
            echo "=== Livewireテストリクエスト ==="
            curl -X POST http://localhost/livewire/update \
              -H "Content-Type: application/json" \
              -H "X-Livewire: true" \
              -d '{"fingerprint":{"id":"test","name":"test"},"serverMemo":{},"updates":[]}' \
              -v 2>&1 | tail -50
            
            echo ""
            echo "=== 最新のエラーログ ==="
            if [ -f storage/logs/laravel.log ]; then
              sudo tail -100 storage/logs/laravel.log | grep -A 20 "livewire" || echo "No Livewire errors"
            fi
            
            echo ""
            echo "=== Livewire設定確認 ==="
            php artisan tinker --execute="
              echo 'App URL: ' . config('app.url') . PHP_EOL;
              echo 'App Key exists: ' . (config('app.key') ? 'Yes' : 'No') . PHP_EOL;
              echo 'Cache driver: ' . config('cache.default') . PHP_EOL;
              echo 'Session driver: ' . config('session.driver') . PHP_EOL;
              echo 'Livewire manifest path: ' . base_path('bootstrap/cache/livewire-components.php') . PHP_EOL;
              if (file_exists(base_path('bootstrap/cache/livewire-components.php'))) {
                echo 'Manifest exists: Yes' . PHP_EOL;
              } else {
                echo 'Manifest exists: No' . PHP_EOL;
              }
            "
            
            echo ""
            echo "=== セッションディレクトリ確認 ==="
            ls -la storage/framework/sessions/ | head -10
            
            echo ""
            echo "=== CSRFトークン生成テスト ==="
            php artisan tinker --execute="
              \\$request = request();
              \\$token = app('session')->token();
              echo 'Session token: ' . \\$token . PHP_EOL;
            "
            
            echo ""
            echo "=== データベース接続確認 ==="
            php artisan tinker --execute="
              try {
                \\$users = \\App\\Models\\User::count();
                echo 'Users in database: ' . \\$users . PHP_EOL;
                if (\\$users > 0) {
                  \\$admin = \\App\\Models\\User::where('email', 'admin@xsyumeno.com')->first();
                  if (\\$admin) {
                    echo 'Admin found: ID=' . \\$admin->id . ', Email=' . \\$admin->email . PHP_EOL;
                  } else {
                    echo 'Admin not found' . PHP_EOL;
                  }
                }
              } catch (\\Exception \\$e) {
                echo 'Database error: ' . \\$e->getMessage() . PHP_EOL;
              }
            "
            
            echo ""
            echo "=== Livewireルート確認 ==="
            php artisan route:list | grep livewire || echo "No Livewire routes"
            
            echo ""
            echo "=== Composer autoload確認 ==="
            composer dump-autoload
            
            echo ""
            echo "=== 管理者作成（念のため） ==="
            php artisan tinker --execute="
              \\$admin = \\App\\Models\\User::where('email', 'admin@xsyumeno.com')->first();
              if (!\\$admin) {
                \\$admin = \\App\\Models\\User::create([
                  'name' => 'Administrator',
                  'email' => 'admin@xsyumeno.com',
                  'password' => bcrypt('password'),
                  'role' => 'superadmin',
                  'is_active' => true,
                  'email_verified_at' => now()
                ]);
                echo 'Admin created: ' . \\$admin->id . PHP_EOL;
              } else {
                echo 'Admin exists: ' . \\$admin->id . PHP_EOL;
              }
            "
            
            echo ""
            echo "=== デバッグモード無効化 ==="
            sudo sed -i 's/APP_DEBUG=.*/APP_DEBUG=false/' .env
            sudo -u www-data php artisan config:cache
            
            echo ""
            echo "================================"
            echo "DEBUG COMPLETE!"
            echo "================================"
          EOF
          
          rm key.pem