name: Direct Server Setup

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create setup script
        run: |
          cat > setup.sh << 'SCRIPT'
          #!/bin/bash
          
          # パッケージインストール
          apt update
          apt install -y nginx php8.3 php8.3-fpm php8.3-mysql php8.3-xml php8.3-mbstring php8.3-curl php8.3-zip php8.3-bcmath php8.3-gd composer git mysql-client
          
          # ディレクトリ作成
          mkdir -p /var/www/html
          cd /var/www/html
          rm -rf current
          
          # コードをコピー（GitHub Actionsのcheckout済みコードを使用）
          cp -r /tmp/code current
          cd current
          
          # 環境設定
          cat > .env << 'ENV'
          APP_NAME=Xsyumeno
          APP_ENV=production
          APP_KEY=
          APP_DEBUG=false
          APP_URL=http://13.231.41.238
          
          DB_CONNECTION=mysql
          DB_HOST=xsyumeno-db.cbq0ywo44b0p.ap-northeast-1.rds.amazonaws.com
          DB_PORT=3306
          DB_DATABASE=xsyumenodb
          DB_USERNAME=admin
          DB_PASSWORD=Xsyumeno2024#!
          
          CACHE_DRIVER=file
          SESSION_DRIVER=file
          QUEUE_CONNECTION=sync
          ENV
          
          # Composer
          composer install --no-dev --optimize-autoloader
          
          # Laravel設定
          php artisan key:generate
          php artisan storage:link
          php artisan migrate:fresh --force
          
          # 管理者作成
          php artisan tinker --execute="
          \$user = App\Models\User::create([
              'name' => 'Administrator',
              'email' => 'admin@xsyumeno.com',
              'password' => Hash::make('password'),
              'role' => 'superadmin',
              'is_active' => true,
              'email_verified_at' => now()
          ]);
          echo 'Admin created';
          "
          
          # 権限設定
          chown -R www-data:www-data /var/www/html/current
          chmod -R 775 storage bootstrap/cache
          
          # Nginx設定
          cat > /etc/nginx/sites-available/default << 'NGINX'
          server {
              listen 80 default_server;
              root /var/www/html/current/public;
              index index.php;
              location / {
                  try_files \$uri \$uri/ /index.php?\$query_string;
              }
              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
              }
          }
          NGINX
          
          # キャッシュ
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # サービス再起動
          systemctl restart nginx php8.3-fpm
          
          echo "Setup complete!"
          SCRIPT
          
      - name: Upload and run via EC2 Instance Connect
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-1
        run: |
          # アーカイブ作成
          tar -czf app.tar.gz --exclude='.git' .
          
          # EC2にアップロード（S3経由）
          aws s3 cp app.tar.gz s3://xsyumeno-deploy/app.tar.gz || true
          
          # または直接SSM経由で実行
          aws ssm send-command \
            --instance-ids i-03560178f4d1538c5 \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=["cd /tmp && wget https://github.com/Naoki-Takahashi0420/metore_system/archive/refs/heads/main.zip && unzip main.zip && cd metore_system-main && bash setup.sh"]' \
            --output json || true
            
          echo "Deployment initiated"