name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Deploy to Production
      env:
        EC2_KEY: ${{ secrets.EC2_KEY }}
        EC2_HOST: 54.249.2.157
        EC2_USER: ubuntu
      run: |
        # セーフティ設定
        set -e
        set -u
        set -o pipefail
        
        # SSHキー設定
        echo "$EC2_KEY" > deploy_key.pem
        chmod 600 deploy_key.pem
        
        # デプロイパッケージ作成
        tar -czf deploy.tar.gz \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.env' \
          --exclude='*.log' \
          .
        
        # アップロード
        echo "Uploading to EC2..."
        if ! scp -o StrictHostKeyChecking=no -i deploy_key.pem \
          deploy.tar.gz ${EC2_USER}@${EC2_HOST}:/tmp/; then
          echo "ERROR: Upload failed"
          exit 1
        fi
        
        # デプロイ実行
        ssh -o StrictHostKeyChecking=no -i deploy_key.pem ${EC2_USER}@${EC2_HOST} << 'DEPLOY_SCRIPT'
        set -e
        APP_DIR="/var/www/html"
        
        # バックアップ
        if [ -d "$APP_DIR" ]; then
          sudo cp -r $APP_DIR /var/www/backup-$(date +%s)
        fi
        
        # デプロイ
        sudo mkdir -p $APP_DIR
        cd $APP_DIR
        sudo tar -xzf /tmp/deploy.tar.gz
        rm /tmp/deploy.tar.gz
        
        # .env作成
        sudo tee $APP_DIR/.env > /dev/null << 'ENV'
        APP_NAME=Xsyumeno
        APP_ENV=production
        APP_KEY=base64:FhDmJJEPuQPAz6t5HMt6qTVSYLs7pJg7xLDgBEcVHHg=
        APP_DEBUG=false
        APP_URL=http://54.249.2.157
        
        DB_CONNECTION=mysql
        DB_HOST=xsyumeno-db.cbq0ywo44b0p.ap-northeast-1.rds.amazonaws.com
        DB_PORT=3306
        DB_DATABASE=xsyumenodb
        DB_USERNAME=admin
        DB_PASSWORD=Xsyumeno2024#!
        
        LOG_CHANNEL=stack
        CACHE_DRIVER=file
        SESSION_DRIVER=database
        QUEUE_CONNECTION=database
        ENV
        
        # Composer
        if ! command -v composer &> /dev/null; then
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
        fi
        
        cd $APP_DIR
        sudo COMPOSER_ALLOW_SUPERUSER=1 composer install --no-dev --optimize-autoloader
        
        # Laravel設定
        sudo php artisan key:generate
        sudo php artisan storage:link
        sudo php artisan config:clear
        sudo php artisan migrate --force
        
        # 権限設定（絶対パスのみ）
        sudo chown -R www-data:www-data $APP_DIR
        sudo chmod -R 755 $APP_DIR
        
        # storageとcacheの権限（存在確認付き）
        [ -d "$APP_DIR/storage" ] && sudo chmod -R 775 $APP_DIR/storage
        [ -d "$APP_DIR/bootstrap/cache" ] && sudo chmod -R 775 $APP_DIR/bootstrap/cache
        
        # サービス再起動
        sudo systemctl restart nginx php8.1-fpm
        
        echo "Deploy completed successfully"
        DEPLOY_SCRIPT
        
        # クリーンアップ
        rm deploy_key.pem deploy.tar.gz
        
        # 動作確認
        sleep 3
        curl -f -I http://${EC2_HOST}/ || echo "Site may need a moment to start"