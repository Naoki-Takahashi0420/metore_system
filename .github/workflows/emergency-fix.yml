name: Emergency Fix

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/emergency-fix.yml'

jobs:
  emergency-fix:
    runs-on: ubuntu-latest
    
    steps:
      - name: Emergency production fix
        env:
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 600 key.pem
          
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -i key.pem ubuntu@13.115.38.179 << 'EOF'
            cd /var/www/html/current
            
            echo "=== EMERGENCY FIX STARTING ==="
            echo "Drop all tables first"
            sudo -u www-data php artisan db:wipe --force
            
            echo "Backup original users migration"
            if [ -f database/migrations/0001_01_01_000000_create_users_table.php ]; then
                cp database/migrations/0001_01_01_000000_create_users_table.php database/migrations/0001_01_01_000000_create_users_table.php.backup
            fi
            
            echo "Create temporary users migration without foreign key"
            cat > /tmp/users_temp.php << 'PHPCODE'
<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
return new class extends Migration {
    public function up(): void {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('store_id')->nullable();
            $table->string('name')->comment('氏名');
            $table->string('email')->unique()->comment('メールアドレス');
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password')->comment('パスワード');
            $table->enum('role', ['superadmin', 'admin', 'manager', 'staff'])->default('staff')->comment('役職');
            $table->json('permissions')->nullable()->comment('権限設定');
            $table->json('specialties')->nullable()->comment('専門分野');
            $table->decimal('hourly_rate', 8, 2)->nullable()->comment('時給');
            $table->boolean('is_active')->default(true)->comment('アクティブ状態');
            $table->timestamp('last_login_at')->nullable()->comment('最終ログイン');
            $table->rememberToken();
            $table->timestamps();
            $table->index(['store_id', 'role']);
            $table->index(['is_active']);
        });
        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });
        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }
    public function down(): void {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};
PHPCODE
            
            sudo cp /tmp/users_temp.php database/migrations/0001_01_01_000000_create_users_table.php
            
            echo "Run all migrations"
            sudo -u www-data php artisan migrate --force
            
            echo "Add foreign key constraint"
            sudo -u www-data php artisan tinker --execute="use Illuminate\Support\Facades\Schema; use Illuminate\Database\Schema\Blueprint; try { Schema::table('users', function (Blueprint \$table) { \$table->foreign('store_id')->references('id')->on('stores')->onDelete('set null'); }); echo 'Foreign key added\n'; } catch (Exception \$e) { echo 'FK error: ' . \$e->getMessage() . '\n'; }"
            
            echo "Create admin user"
            sudo -u www-data php artisan tinker --execute="try { \$user = \App\Models\User::create(['name' => 'Administrator', 'email' => 'admin@xsyumeno.com', 'password' => \Illuminate\Support\Facades\Hash::make('password'), 'role' => 'superadmin', 'is_active' => true, 'email_verified_at' => now()]); echo 'Admin created: ' . \$user->id . '\n'; } catch (Exception \$e) { echo 'User error: ' . \$e->getMessage() . '\n'; }"
            
            echo "Clear caches"
            sudo rm -rf bootstrap/cache/* storage/framework/cache/data/* storage/framework/sessions/* storage/framework/views/*
            sudo -u www-data php artisan config:cache
            sudo -u www-data php artisan route:cache
            sudo -u www-data php artisan view:cache
            sudo chown -R www-data:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache
            
            echo "Restart services"
            sudo systemctl restart php8.3-fpm nginx
            
            echo "Verify"
            sudo -u www-data php artisan tinker --execute="\$users = \App\Models\User::all(); echo 'Users: ' . \$users->count() . '\n'; foreach (\$users as \$u) { echo \$u->email . ' (' . \$u->role . ')\n'; }"
            
            echo "========================================="
            echo "EMERGENCY FIX COMPLETE!"
            echo "Login: http://13.115.38.179/admin/login"
            echo "Email: admin@xsyumeno.com"
            echo "Password: password"
            echo "========================================="
          EOF
          
          rm key.pem