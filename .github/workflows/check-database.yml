name: Check Database Connection

on:
  workflow_dispatch:

jobs:
  check-db:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check which database is connected
        env:
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 600 key.pem
          
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -i key.pem ubuntu@13.115.38.179 << 'EOF'
            cd /var/www/html/current
            
            echo "=== .env のデータベース設定 ==="
            grep -E "DB_" .env | head -10
            
            echo ""
            echo "=== .env.production のデータベース設定 ==="
            if [ -f /var/www/html/.env.production ]; then
              grep -E "DB_" /var/www/html/.env.production | head -10
            fi
            
            echo ""
            echo "=== 実際のデータベース接続テスト ==="
            php -r "
            require 'vendor/autoload.php';
            \$app = require 'bootstrap/app.php';
            \$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();
            
            try {
                \$config = \$app['config']->get('database.connections.mysql');
                echo 'Host: ' . \$config['host'] . '\n';
                echo 'Database: ' . \$config['database'] . '\n';
                echo 'Username: ' . \$config['username'] . '\n';
                
                \$pdo = \$app['db']->connection()->getPdo();
                echo 'Connection: SUCCESS\n';
                
                // テーブル一覧
                \$tables = \$app['db']->select('SHOW TABLES');
                echo 'Tables count: ' . count(\$tables) . '\n';
                
                // usersテーブルの中身
                \$users = \$app['db']->table('users')->count();
                echo 'Users count: ' . \$users . '\n';
                
                // 管理者確認
                \$admin = \$app['db']->table('users')->where('email', 'admin@xsyumeno.com')->first();
                if (\$admin) {
                    echo 'Admin exists in THIS database\n';
                } else {
                    echo 'Admin NOT found in THIS database\n';
                }
                
            } catch (Exception \$e) {
                echo 'Error: ' . \$e->getMessage() . '\n';
            }
            "
            
            echo ""
            echo "=== ローカルとRDSの比較 ==="
            echo "もしかして："
            echo "1. ローカルデータベースに接続してる？"
            echo "2. 違うRDSインスタンスに接続してる？"
            echo "3. 違うデータベース名を使ってる？"
            
            echo ""
            echo "=== MySQLコマンドでの直接確認 ==="
            # MySQLクライアントがインストールされていれば実行
            if command -v mysql &> /dev/null; then
              DB_HOST=$(grep DB_HOST .env | cut -d= -f2)
              DB_NAME=$(grep DB_DATABASE .env | cut -d= -f2)
              DB_USER=$(grep DB_USERNAME .env | cut -d= -f2)
              DB_PASS=$(grep DB_PASSWORD .env | cut -d= -f2)
              
              echo "Trying to connect to: $DB_HOST/$DB_NAME"
              mysql -h$DB_HOST -u$DB_USER -p$DB_PASS -e "SELECT COUNT(*) as user_count FROM users;" $DB_NAME 2>/dev/null || echo "MySQL connection failed"
            else
              echo "MySQL client not installed"
            fi
            
            echo ""
            echo "=== キャッシュされた設定を確認 ==="
            if [ -f bootstrap/cache/config.php ]; then
              grep -A 5 "'mysql' =>" bootstrap/cache/config.php | grep -E "host|database|username" | head -5
            fi
          EOF
          
          rm key.pem