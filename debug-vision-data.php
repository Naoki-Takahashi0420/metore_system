<?php

/**
 * Ë¶ñÂäõÊé®Áßª„Ç∞„É©„Éï„ÅÆ„Éá„Éê„ÉÉ„Ç∞Áî®„Çπ„ÇØ„É™„Éó„Éà
 * „Ç´„É´„ÉÜID 132„ÅÆË¶ñÂäõ„Éá„Éº„Çø„ÇíË™øÊüª
 */

require __DIR__ . '/vendor/autoload.php';

$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();

use App\Models\MedicalRecord;
use Illuminate\Support\Facades\DB;

echo "==========================================\n";
echo "Ë¶ñÂäõÊé®Áßª„Ç∞„É©„Éï „Éá„Éê„ÉÉ„Ç∞„É¨„Éù„Éº„Éà\n";
echo "==========================================\n\n";

// „Ç´„É´„ÉÜID 132„ÇíÂèñÂæó
$medicalRecordId = 132;
$medicalRecord = MedicalRecord::find($medicalRecordId);

if (!$medicalRecord) {
    echo "‚ùå „Ç´„É´„ÉÜID {$medicalRecordId} „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì\n";
    exit(1);
}

echo "‚úÖ „Ç´„É´„ÉÜID: {$medicalRecord->id}\n";
echo "üìÖ ÊñΩË°ìÊó•: {$medicalRecord->treatment_date}\n";
echo "üë§ È°ßÂÆ¢ID: {$medicalRecord->customer_id}\n\n";

// Âêå„ÅòÈ°ßÂÆ¢„ÅÆÂÖ®„Ç´„É´„ÉÜ„ÇíÂèñÂæó
$allRecords = MedicalRecord::where('customer_id', $medicalRecord->customer_id)
    ->orderBy('treatment_date', 'asc')
    ->get();

echo "üìä È°ßÂÆ¢„ÅÆÂÖ®„Ç´„É´„ÉÜÊï∞: " . $allRecords->count() . "\n\n";

// ÂêÑ„Ç´„É´„ÉÜ„ÅÆË¶ñÂäõ„Éá„Éº„Çø„ÇíË°®Á§∫
foreach ($allRecords as $index => $record) {
    echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";
    echo "„Ç´„É´„ÉÜ #{$record->id} (ÊñΩË°ìÊó•: {$record->treatment_date})\n";
    echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";

    $visionRecords = $record->vision_records ?? [];

    if (empty($visionRecords)) {
        echo "  ‚ö†Ô∏è  Ë¶ñÂäõ„Éá„Éº„Çø„Å™„Åó\n\n";
        continue;
    }

    foreach ($visionRecords as $visionIndex => $vision) {
        echo "\n  üìù Ë¶ñÂäõË®òÈå≤ #{$visionIndex}\n";
        echo "  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n";

        // Êó•‰ªò
        $date = $vision['date'] ?? $record->treatment_date?->format('Y-m-d') ?? '‰∏çÊòé';
        echo "  Êó•‰ªò: {$date}\n\n";

        // Ë£∏ÁúºË¶ñÂäõ
        echo "  „ÄêË£∏ÁúºË¶ñÂäõ„Äë\n";
        echo "    Â∑¶ÁúºÔºàÊñΩË°ìÂâçÔºâ: ";
        var_export($vision['before_naked_left'] ?? null);
        echo " ‚Üí Âûã: " . gettype($vision['before_naked_left'] ?? null) . "\n";

        echo "    Â∑¶ÁúºÔºàÊñΩË°ìÂæåÔºâ: ";
        var_export($vision['after_naked_left'] ?? null);
        echo " ‚Üí Âûã: " . gettype($vision['after_naked_left'] ?? null) . "\n";

        echo "    Âè≥ÁúºÔºàÊñΩË°ìÂâçÔºâ: ";
        var_export($vision['before_naked_right'] ?? null);
        echo " ‚Üí Âûã: " . gettype($vision['before_naked_right'] ?? null) . "\n";

        echo "    Âè≥ÁúºÔºàÊñΩË°ìÂæåÔºâ: ";
        var_export($vision['after_naked_right'] ?? null);
        echo " ‚Üí Âûã: " . gettype($vision['after_naked_right'] ?? null) . "\n\n";

        // ÁüØÊ≠£Ë¶ñÂäõ
        echo "  „ÄêÁüØÊ≠£Ë¶ñÂäõ„Äë\n";
        echo "    Â∑¶ÁúºÔºàÊñΩË°ìÂâçÔºâ: ";
        var_export($vision['before_corrected_left'] ?? null);
        echo " ‚Üí Âûã: " . gettype($vision['before_corrected_left'] ?? null) . "\n";

        echo "    Â∑¶ÁúºÔºàÊñΩË°ìÂæåÔºâ: ";
        var_export($vision['after_corrected_left'] ?? null);
        echo " ‚Üí Âûã: " . gettype($vision['after_corrected_left'] ?? null) . "\n";

        echo "    Âè≥ÁúºÔºàÊñΩË°ìÂâçÔºâ: ";
        var_export($vision['before_corrected_right'] ?? null);
        echo " ‚Üí Âûã: " . gettype($vision['before_corrected_right'] ?? null) . "\n";

        echo "    Âè≥ÁúºÔºàÊñΩË°ìÂæåÔºâ: ";
        var_export($vision['after_corrected_right'] ?? null);
        echo " ‚Üí Âûã: " . gettype($vision['after_corrected_right'] ?? null) . "\n\n";

        // Â§âÊèõÂæå„ÅÆÂÄ§„Çí„ÉÜ„Çπ„Éà
        echo "  „ÄêÂ§âÊèõÂæå„ÅÆÂÄ§ÔºàÁèæÂú®„ÅÆ„É≠„Ç∏„ÉÉ„ÇØÔºâ„Äë\n";
        $leftCorrectedBefore = (isset($vision['before_corrected_left']) && $vision['before_corrected_left'] !== '' && (float)$vision['before_corrected_left'] >= 0) ? (float)$vision['before_corrected_left'] : null;
        echo "    Â∑¶ÁúºÔºàÊñΩË°ìÂâçÔºâÁüØÊ≠£: ";
        var_export($leftCorrectedBefore);
        echo " ‚Üí null„Åã?: " . ($leftCorrectedBefore === null ? 'YES' : 'NO') . "\n";

        // Ë©≥Á¥∞„Å™Êù°‰ª∂„ÉÅ„Çß„ÉÉ„ÇØ
        echo "\n  „ÄêÊù°‰ª∂„ÉÅ„Çß„ÉÉ„ÇØË©≥Á¥∞„Äë\n";
        echo "    isset: " . (isset($vision['before_corrected_left']) ? 'true' : 'false') . "\n";
        echo "    !== '': " . (isset($vision['before_corrected_left']) && $vision['before_corrected_left'] !== '' ? 'true' : 'false') . "\n";
        if (isset($vision['before_corrected_left'])) {
            echo "    (float)ÂÄ§: " . (float)$vision['before_corrected_left'] . "\n";
            echo "    >= 0: " . ((float)$vision['before_corrected_left'] >= 0 ? 'true' : 'false') . "\n";
        }
    }

    echo "\n";
}

echo "\n==========================================\n";
echo "„Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆÁîü„ÅÆÂÄ§„ÇíÁ¢∫Ë™ç\n";
echo "==========================================\n\n";

// „Éá„Éº„Çø„Éô„Éº„Çπ„Åã„ÇâÁõ¥Êé•ÂèñÂæó
$rawData = DB::table('medical_records')
    ->where('id', $medicalRecordId)
    ->first();

echo "vision_records „Ç´„É©„É†„ÅÆÁîü„ÅÆÂÄ§:\n";
echo $rawData->vision_records ?? 'NULL';
echo "\n\n";

echo "==========================================\n";
echo "„Éá„Éê„ÉÉ„Ç∞ÂÆå‰∫Ü\n";
echo "==========================================\n";
